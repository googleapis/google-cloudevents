{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/apihub/v1/ApiEventData.json",
  "name": "ApiEventData",
  "examples": [],
  "package": "google.events.cloud.apihub.v1",
  "datatype": "google.events.cloud.apihub.v1.ApiEventData",
  "cloudeventTypes": [
    "google.cloud.apihub.api.v1.created",
    "google.cloud.apihub.api.v1.updated",
    "google.cloud.apihub.api.v1.deleted"
  ],
  "product": "API hub",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/ApiEventData",
  "definitions": {
    "ApiEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Api",
          "additionalProperties": true,
          "description": "Optional. The Api event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Api Event Data",
      "description": "The data within all Api events."
    },
    "Api": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Identifier. The name of the API resource in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}`"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the API resource."
        },
        "description": {
          "type": "string",
          "description": "Optional. The description of the API resource."
        },
        "documentation": {
          "$ref": "#/definitions/Documentation",
          "additionalProperties": true,
          "description": "Optional. The documentation for the API resource."
        },
        "owner": {
          "$ref": "#/definitions/Owner",
          "additionalProperties": true,
          "description": "Optional. Owner details for the API resource."
        },
        "versions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The list of versions present in an API resource. Note: An API resource can be associated with more than 1 version. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}`"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the API resource was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time at which the API resource was last updated.",
          "format": "date-time"
        },
        "targetUser": {
          "$ref": "#/definitions/AttributeValues",
          "additionalProperties": true,
          "description": "Optional. The target users for the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-target-user` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute."
        },
        "team": {
          "$ref": "#/definitions/AttributeValues",
          "additionalProperties": true,
          "description": "Optional. The team owning the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-team` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute."
        },
        "businessUnit": {
          "$ref": "#/definitions/AttributeValues",
          "additionalProperties": true,
          "description": "Optional. The business unit owning the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-business-unit` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute."
        },
        "maturityLevel": {
          "$ref": "#/definitions/AttributeValues",
          "additionalProperties": true,
          "description": "Optional. The maturity level of the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-maturity-level` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute."
        },
        "attributes": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValues",
            "additionalProperties": true
          },
          "type": "object",
          "description": "Optional. The list of user defined attributes associated with the API resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource."
        },
        "apiStyle": {
          "$ref": "#/definitions/AttributeValues",
          "additionalProperties": true,
          "description": "Optional. The style of the API. This maps to the following system defined attribute: `projects/{project}/locations/{location}/attributes/system-api-style` attribute. The number of values for this attribute will be based on the cardinality of the attribute. The same can be retrieved via GetAttribute API. All values should be from the list of allowed values defined for the attribute."
        },
        "selectedVersion": {
          "type": "string",
          "description": "Optional. The selected version for an API resource. This can be used when special handling is needed on client side for particular version of the API. Format is `projects/{project}/locations/{location}/apis/{api}/versions/{version}`"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Api",
      "description": "An API resource in the API Hub."
    },
    "AllowedValue": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The ID of the allowed value. * If provided, the same will be used. The service will throw an error if the specified id is already used by another allowed value in the same attribute resource. * If not provided, a system generated id derived from the display name will be used. In this case, the service will handle conflict resolution by adding a system generated suffix in case of duplicates. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the allowed value."
        },
        "description": {
          "type": "string",
          "description": "Optional. The detailed description of the allowed value."
        },
        "immutable": {
          "type": "boolean",
          "description": "Optional. When set to true, the allowed value cannot be updated or deleted by the user. It can only be true for System defined attributes."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Allowed Value",
      "description": "The value that can be assigned to the attribute when the data type is enum."
    },
    "AttributeValues": {
      "properties": {
        "enumValues": {
          "$ref": "#/definitions/EnumAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is enum."
        },
        "stringValues": {
          "$ref": "#/definitions/StringAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is string."
        },
        "jsonValues": {
          "$ref": "#/definitions/StringAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is JSON."
        },
        "attribute": {
          "type": "string",
          "description": "Output only. The name of the attribute. Format: projects/{project}/locations/{location}/attributes/{attribute}"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Attribute Values",
      "description": "The attribute values associated with resource."
    },
    "EnumAttributeValues": {
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/AllowedValue"
          },
          "type": "array",
          "description": "Required. The attribute values in case attribute data type is enum."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Enum Attribute Values",
      "description": "The attribute values of data type enum."
    },
    "StringAttributeValues": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The attribute values in case attribute data type is string or JSON."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "String Attribute Values",
      "description": "The attribute values of data type string or JSON."
    },
    "Documentation": {
      "properties": {
        "externalUri": {
          "type": "string",
          "description": "Optional. The uri of the externally hosted documentation."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Documentation",
      "description": "Documentation details."
    },
    "Owner": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. The name of the owner."
        },
        "email": {
          "type": "string",
          "description": "Required. The email of the owner."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Owner",
      "description": "Owner details."
    }
  }
}
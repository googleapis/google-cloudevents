{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/apihub/v1/DependencyEventData.json",
  "name": "DependencyEventData",
  "examples": [],
  "package": "google.events.cloud.apihub.v1",
  "datatype": "google.events.cloud.apihub.v1.DependencyEventData",
  "cloudeventTypes": [
    "google.cloud.apihub.dependency.v1.created",
    "google.cloud.apihub.dependency.v1.updated",
    "google.cloud.apihub.dependency.v1.deleted"
  ],
  "product": "API hub",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/DependencyEventData",
  "definitions": {
    "DependencyEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Dependency",
          "additionalProperties": true,
          "description": "Optional. The Dependency event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dependency Event Data",
      "description": "The data within all Dependency events."
    },
    "AllowedValue": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The ID of the allowed value. * If provided, the same will be used. The service will throw an error if the specified id is already used by another allowed value in the same attribute resource. * If not provided, a system generated id derived from the display name will be used. In this case, the service will handle conflict resolution by adding a system generated suffix in case of duplicates. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the allowed value."
        },
        "description": {
          "type": "string",
          "description": "Optional. The detailed description of the allowed value."
        },
        "immutable": {
          "type": "boolean",
          "description": "Optional. When set to true, the allowed value cannot be updated or deleted by the user. It can only be true for System defined attributes."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Allowed Value",
      "description": "The value that can be assigned to the attribute when the data type is enum."
    },
    "AttributeValues": {
      "properties": {
        "enumValues": {
          "$ref": "#/definitions/EnumAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is enum."
        },
        "stringValues": {
          "$ref": "#/definitions/StringAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is string."
        },
        "jsonValues": {
          "$ref": "#/definitions/StringAttributeValues",
          "additionalProperties": true,
          "description": "The attribute values associated with a resource in case attribute data type is JSON."
        },
        "attribute": {
          "type": "string",
          "description": "Output only. The name of the attribute. Format: projects/{project}/locations/{location}/attributes/{attribute}"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Attribute Values",
      "description": "The attribute values associated with resource."
    },
    "EnumAttributeValues": {
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/AllowedValue"
          },
          "type": "array",
          "description": "Required. The attribute values in case attribute data type is enum."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Enum Attribute Values",
      "description": "The attribute values of data type enum."
    },
    "StringAttributeValues": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The attribute values in case attribute data type is string or JSON."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "String Attribute Values",
      "description": "The attribute values of data type string or JSON."
    },
    "Dependency": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Identifier. The name of the dependency in the API Hub. Format: `projects/{project}/locations/{location}/dependencies/{dependency}`"
        },
        "consumer": {
          "$ref": "#/definitions/DependencyEntityReference",
          "additionalProperties": true,
          "description": "Required. Immutable. The entity acting as the consumer in the dependency."
        },
        "supplier": {
          "$ref": "#/definitions/DependencyEntityReference",
          "additionalProperties": true,
          "description": "Required. Immutable. The entity acting as the supplier in the dependency."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "PROPOSED",
            1,
            "VALIDATED",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "Possible states for a dependency."
        },
        "description": {
          "type": "string",
          "description": "Optional. Human readable description corresponding of the dependency."
        },
        "discoveryMode": {
          "enum": [
            "DISCOVERY_MODE_UNSPECIFIED",
            0,
            "MANUAL",
            1
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Discovery Mode",
          "description": "Possible modes of discovering the dependency."
        },
        "errorDetail": {
          "$ref": "#/definitions/DependencyErrorDetail",
          "additionalProperties": true,
          "description": "Output only. Error details of a dependency if the system has detected it internally."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which the dependency was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time at which the dependency was last updated.",
          "format": "date-time"
        },
        "attributes": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValues",
            "additionalProperties": true
          },
          "type": "object",
          "description": "Optional. The list of user defined attributes associated with the dependency resource. The key is the attribute name. It will be of the format: `projects/{project}/locations/{location}/attributes/{attribute}`. The value is the attribute values associated with the resource."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dependency",
      "description": "A dependency resource defined in the API hub describes a dependency directed from a consumer to a supplier entity. A dependency can be defined between two [Operations][google.cloud.apihub.v1.Operation] or between an [Operation][google.cloud.apihub.v1.Operation] and [External API][google.cloud.apihub.v1.ExternalApi]."
    },
    "DependencyEntityReference": {
      "properties": {
        "operationResourceName": {
          "type": "string",
          "description": "The resource name of an operation in the API Hub. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`"
        },
        "externalApiResourceName": {
          "type": "string",
          "description": "The resource name of an external API in the API Hub. Format: `projects/{project}/locations/{location}/externalApis/{external_api}`"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Display name of the entity."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dependency Entity Reference",
      "description": "Reference to an entity participating in a dependency."
    },
    "DependencyErrorDetail": {
      "properties": {
        "error": {
          "enum": [
            "ERROR_UNSPECIFIED",
            0,
            "SUPPLIER_NOT_FOUND",
            1,
            "SUPPLIER_RECREATED",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Error",
          "description": "Possible values representing an error in the dependency."
        },
        "errorTime": {
          "type": "string",
          "description": "Optional. Timestamp at which the error was found.",
          "format": "date-time"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dependency Error Detail",
      "description": "Details describing error condition of a dependency."
    }
  }
}
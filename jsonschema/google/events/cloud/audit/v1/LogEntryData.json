{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/audit/v1/LogEntryData.json",
  "name": "LogEntryData",
  "examples": [
    "https://googleapis.github.io/google-cloudevents/testdata/google/events/cloud/audit/v1/LogEntryData-bigqueryjobcompleted.json",
    "https://googleapis.github.io/google-cloudevents/testdata/google/events/cloud/audit/v1/LogEntryData-pubsubCreateTopic.json"
  ],
  "package": "google.events.cloud.audit.v1",
  "datatype": "google.events.cloud.audit.v1.LogEntryData",
  "cloudeventTypes": [
    "google.cloud.audit.log.v1.written"
  ],
  "product": "Cloud Audit Logs",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/LogEntryData",
  "definitions": {
    "LogEntryData": {
      "properties": {
        "logName": {
          "type": "string",
          "description": "The resource name of the log to which this log entry belongs."
        },
        "resource": {
          "$ref": "#/definitions/MonitoredResource",
          "additionalProperties": true,
          "description": "The monitored resource that produced this log entry. Example: a log entry that reports a database error would be associated with the monitored resource designating the particular database that reported the error."
        },
        "protoPayload": {
          "$ref": "#/definitions/AuditLog",
          "additionalProperties": true,
          "description": "The log entry payload, which is always an AuditLog for Cloud Audit Log events."
        },
        "insertId": {
          "type": "string",
          "description": "A unique identifier for the log entry."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A set of user-defined (key, value) data that provides additional information about the log entry."
        },
        "operation": {
          "$ref": "#/definitions/LogEntryOperation",
          "additionalProperties": true,
          "description": "Information about an operation associated with the log entry, if applicable."
        },
        "timestamp": {
          "type": "string",
          "description": "The time the event described by the log entry occurred.",
          "format": "date-time"
        },
        "receiveTimestamp": {
          "type": "string",
          "description": "The time the log entry was received by Logging.",
          "format": "date-time"
        },
        "severity": {
          "enum": [
            "DEFAULT",
            0,
            "DEBUG",
            100,
            "INFO",
            200,
            "NOTICE",
            300,
            "WARNING",
            400,
            "ERROR",
            500,
            "CRITICAL",
            600,
            "ALERT",
            700,
            "EMERGENCY",
            800
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Log Severity",
          "description": "The severity of the event described in a log entry, expressed as one of the standard severity levels listed below.  For your reference, the levels are assigned the listed numeric values. The effect of using numeric values other than those listed is undefined. Copied from https://github.com/googleapis/googleapis/blob/master/google/logging/type/log_severity.proto"
        },
        "trace": {
          "type": "string",
          "description": "Resource name of the trace associated with the log entry, if any. If it contains a relative resource name, the name is assumed to be relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`"
        },
        "spanId": {
          "type": "string",
          "description": "The span ID within the trace associated with the log entry, if any. For Trace spans, this is the same format that the Trace API v2 uses: a 16-character hexadecimal encoding of an 8-byte array, such as `000000000000004a`."
        },
        "split": {
          "$ref": "#/definitions/LogSplit",
          "additionalProperties": true,
          "description": "Information indicating this LogEntry is part of a sequence of multiple logs split from a single LogEntry."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Log Entry Data",
      "description": "The data within all Cloud Audit Logs log entry events."
    },
    "MonitoredResource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. The monitored resource type. For example, the type of a  Compute Engine VM instance is `gce_instance`."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels `\"project_id\"`, `\"instance_id\"`, and `\"zone\"`."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Note: this is a much-reduced version of the proto at\n https://github.com/googleapis/googleapis/blob/master/google/api/monitored_resource.proto\n to avoid other dependencies leaking into events.",
      "description": "Note: this is a much-reduced version of the proto at https://github.com/googleapis/googleapis/blob/master/google/api/monitored_resource.proto to avoid other dependencies leaking into events.  An object representing a resource that can be used for monitoring, logging, billing, or other purposes."
    },
    "AuditLog": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the API service performing the operation. For example, `\"datastore.googleapis.com\"`."
        },
        "methodName": {
          "type": "string",
          "description": "The name of the service method or operation. For API calls, this should be the name of the API method. For example,     \"google.datastore.v1.Datastore.RunQuery\"     \"google.logging.v1.LoggingService.DeleteLog\""
        },
        "resourceName": {
          "type": "string",
          "description": "The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example:     \"shelves/SHELF_ID/books\"     \"shelves/SHELF_ID/books/BOOK_ID\""
        },
        "resourceLocation": {
          "$ref": "#/definitions/ResourceLocation",
          "additionalProperties": true,
          "description": "The resource location information."
        },
        "resourceOriginalState": {
          "additionalProperties": true,
          "type": "object",
          "description": "The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "numResponseItems": {
          "type": "integer",
          "description": "The number of items returned from a List or Query API method, if applicable."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "additionalProperties": true,
          "description": "The status of the overall operation."
        },
        "authenticationInfo": {
          "$ref": "#/definitions/AuthenticationInfo",
          "additionalProperties": true,
          "description": "Authentication information."
        },
        "authorizationInfo": {
          "items": {
            "$ref": "#/definitions/AuthorizationInfo"
          },
          "type": "array",
          "description": "Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple."
        },
        "requestMetadata": {
          "$ref": "#/definitions/RequestMetadata",
          "additionalProperties": true,
          "description": "Metadata about the operation."
        },
        "request": {
          "additionalProperties": true,
          "type": "object",
          "description": "The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "response": {
          "additionalProperties": true,
          "type": "object",
          "description": "The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "metadata": {
          "additionalProperties": true,
          "type": "object",
          "description": "Other service-specific data about the request, response, and other information associated with the current audited event."
        },
        "serviceData": {
          "additionalProperties": true,
          "type": "object",
          "description": "Deprecated: Use `metadata` field instead. Other service-specific data about the request, response, and other activities. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Audit Log",
      "description": "Common audit log format for Google Cloud Platform API operations. Copied from https://github.com/googleapis/googleapis/blob/master/google/cloud/audit/audit_log.proto, but changing service_data from Any to Struct."
    },
    "AuthenticationInfo": {
      "properties": {
        "principalEmail": {
          "type": "string",
          "description": "The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id)."
        },
        "authoritySelector": {
          "type": "string",
          "description": "The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority."
        },
        "thirdPartyPrincipal": {
          "additionalProperties": true,
          "type": "object",
          "description": "The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "serviceAccountKeyName": {
          "type": "string",
          "description": "The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\""
        },
        "serviceAccountDelegationInfo": {
          "items": {
            "$ref": "#/definitions/ServiceAccountDelegationInfo"
          },
          "type": "array",
          "description": "Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events."
        },
        "principalSubject": {
          "type": "string",
          "description": "String representation of identity of requesting party. Populated for both first and third party identities."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Authentication Info",
      "description": "Authentication information for the operation."
    },
    "AuthorizationInfo": {
      "properties": {
        "resource": {
          "type": "string",
          "description": "The resource being accessed, as a REST-style string. For example:     bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID"
        },
        "permission": {
          "type": "string",
          "description": "The required IAM permission."
        },
        "granted": {
          "type": "boolean",
          "description": "Whether or not authorization for `resource` and `permission` was granted."
        },
        "resourceAttributes": {
          "$ref": "#/definitions/Resource",
          "additionalProperties": true,
          "description": "Resource attributes used in IAM condition evaluation. This field contains resource attributes like resource type and resource name. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLogData.request_metadata.request_attributes`."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Authorization Info",
      "description": "Authorization information for the operation."
    },
    "LogEntryOperation": {
      "properties": {
        "id": {
          "type": "string",
          "description": "An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation."
        },
        "producer": {
          "type": "string",
          "description": "An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`."
        },
        "first": {
          "type": "boolean",
          "description": "True if this is the first log entry in the operation."
        },
        "last": {
          "type": "boolean",
          "description": "True if this is the last log entry in the operation."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Log Entry Operation",
      "description": "Additional information about a potentially long-running operation with which a log entry is associated."
    },
    "LogSplit": {
      "properties": {
        "uid": {
          "type": "string",
          "description": "A globally unique identifier for all LogEntries in a sequence of split logs. All LogEntries with the same |LogSplit.uid| are assumed to be part of the same sequence of split logs."
        },
        "index": {
          "type": "integer",
          "description": "The index of this LogEntry in the sequence of split logs. LogEntries are given |index| values 0, 1, ..., n-1 for a sequence of n entries."
        },
        "totalSplits": {
          "type": "integer",
          "description": "The total number of logs that the original LogEntry was split into."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Log Split",
      "description": "Additional information used to correlate multiple LogEntries. Used when a single LogEntry would exceed the Google Cloud Logging size limit and is split across multiple entries."
    },
    "RequestMetadata": {
      "properties": {
        "callerIp": {
          "type": "string",
          "description": "The IP address of the caller. For caller from internet, this will be public IPv4 or IPv6 address. For caller from a Compute Engine VM with external IP address, this will be the VM's external IP address. For caller from a Compute Engine VM without external IP address, if the VM is in the same organization (or project) as the accessed resource, `caller_ip` will be the VM's internal IPv4 address, otherwise the `caller_ip` will be redacted to \"gce-internal-ip\". See https://cloud.google.com/compute/docs/vpc/ for more information."
        },
        "callerSuppliedUserAgent": {
          "type": "string",
          "description": "The user agent of the caller. This information is not authenticated and should be treated accordingly. For example: +   `google-api-python-client/1.4.0`:     The request was made by the Google API client for Python. +   `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`:     The request was made by the Google Cloud SDK CLI (gcloud). +   `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`:     The request was made from the `my-project` App Engine app."
        },
        "callerNetwork": {
          "type": "string",
          "description": "The network of the caller. Set only if the network host project is part of the same GCP organization (or project) as the accessed resource. See https://cloud.google.com/compute/docs/vpc/ for more information. This is a scheme-less URI full resource name. For example:     \"//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID\""
        },
        "requestAttributes": {
          "$ref": "#/definitions/Request",
          "additionalProperties": true,
          "description": "Request attributes used in IAM condition evaluation. This field contains request attributes like request time and access levels associated with the request. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.authentication_info.resource_attributes`."
        },
        "destinationAttributes": {
          "$ref": "#/definitions/Peer",
          "additionalProperties": true,
          "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop. Only two fields are used in this message, Peer.port and Peer.ip. These fields are optionally populated by those services utilizing the IAM condition feature."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Request Metadata",
      "description": "Metadata about the request."
    },
    "ResourceLocation": {
      "properties": {
        "currentLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The locations of a resource after the execution of the operation. Requests to create or delete a location based resource must populate the 'current_locations' field and not the 'original_locations' field. For example:     \"europe-west1-a\"     \"us-east1\"     \"nam3\""
        },
        "originalLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The locations of a resource prior to the execution of the operation. Requests that mutate the resource's location must populate both the 'original_locations' as well as the 'current_locations' fields. For example:     \"europe-west1-a\"     \"us-east1\"     \"nam3\""
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Resource Location",
      "description": "Location information about a resource."
    },
    "ServiceAccountDelegationInfo": {
      "properties": {
        "firstPartyPrincipal": {
          "$ref": "#/definitions/FirstPartyPrincipal",
          "additionalProperties": true,
          "description": "First party (Google) identity as the real authority."
        },
        "thirdPartyPrincipal": {
          "$ref": "#/definitions/ThirdPartyPrincipal",
          "additionalProperties": true,
          "description": "Third party identity as the real authority."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Service Account Delegation Info",
      "description": "Identity delegation history of an authenticated service account."
    },
    "FirstPartyPrincipal": {
      "properties": {
        "principalEmail": {
          "type": "string",
          "description": "The email address of a Google account."
        },
        "serviceMetadata": {
          "additionalProperties": true,
          "type": "object",
          "description": "Metadata about the service that uses the service account."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "First Party Principal",
      "description": "First party identity principal."
    },
    "ThirdPartyPrincipal": {
      "properties": {
        "thirdPartyClaims": {
          "additionalProperties": true,
          "type": "object",
          "description": "Metadata about third party identity."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Third Party Principal",
      "description": "Third party identity principal."
    },
    "Status": {
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "items": {
            "properties": {
              "typeUrl": {
                "type": "string",
                "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
              },
              "value": {
                "type": "string",
                "description": "Must be a valid serialized protocol buffer of the above specified type.",
                "format": "binary",
                "binaryEncoding": "base64"
              }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Any",
            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": <string>,       \"lastName\": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
          },
          "type": "array",
          "description": "A list of messages that carry the error details.  There is a common set of message types for APIs to use."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "Auth": {
      "properties": {
        "principal": {
          "type": "string",
          "description": "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\""
        },
        "audiences": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: *  The services intended to receive the credential such as    [\"pubsub.googleapis.com\", \"storage.googleapis.com\"] *  A set of service-based scopes. For example,    [\"https://www.googleapis.com/auth/cloud-platform\"] *  The client id of an app, such as the Firebase project id for JWTs    from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided."
        },
        "presenter": {
          "type": "string",
          "description": "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\"."
        },
        "claims": {
          "additionalProperties": true,
          "type": "object",
          "description": "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT:    {'iss': 'accounts.google.com',     'sub': '113289723416554971153',     'aud': ['123456789012', 'pubsub.googleapis.com'],     'azp': '123456789012.apps.googleusercontent.com',     'email': 'jsmith@example.com',     'iat': 1353601026,     'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure."
        },
        "accessLevels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\""
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Auth",
      "description": "This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards."
    },
    "Peer": {
      "properties": {
        "ip": {
          "type": "string",
          "description": "The IP address of the peer."
        },
        "port": {
          "type": "integer",
          "description": "The network port of the peer."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The labels associated with the peer."
        },
        "principal": {
          "type": "string",
          "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
        },
        "regionCode": {
          "type": "string",
          "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Peer",
      "description": "This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate."
    },
    "Request": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service."
        },
        "method": {
          "type": "string",
          "description": "The HTTP request method, such as `GET`, `POST`."
        },
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive."
        },
        "path": {
          "type": "string",
          "description": "The HTTP URL path."
        },
        "host": {
          "type": "string",
          "description": "The HTTP request `Host` header value."
        },
        "scheme": {
          "type": "string",
          "description": "The HTTP URL scheme, such as `http` and `https`."
        },
        "query": {
          "type": "string",
          "description": "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed."
        },
        "time": {
          "type": "string",
          "description": "The timestamp when the `destination` service receives the first byte of the request.",
          "format": "date-time"
        },
        "size": {
          "type": "integer",
          "description": "The HTTP request size in bytes. If unknown, it must be -1."
        },
        "protocol": {
          "type": "string",
          "description": "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details."
        },
        "reason": {
          "type": "string",
          "description": "A special parameter for request reason. It is used by security systems to associate auditing information with a request."
        },
        "auth": {
          "$ref": "#/definitions/Auth",
          "additionalProperties": true,
          "description": "The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Request",
      "description": "This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request."
    },
    "Resource": {
      "properties": {
        "service": {
          "type": "string",
          "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request."
        },
        "name": {
          "type": "string",
          "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: *   Resource name is a logical identifier, independent of network     protocol and API version. For example,     `//pubsub.googleapis.com/projects/123/topics/news-feed`. *   URI often includes protocol and version information, so it can     be used directly by applications. For example,     `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\"."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Resource",
      "description": "This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service."
    }
  }
}
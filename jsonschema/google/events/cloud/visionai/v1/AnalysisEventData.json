{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/visionai/v1/AnalysisEventData.json",
  "name": "AnalysisEventData",
  "examples": [],
  "package": "google.events.cloud.visionai.v1",
  "datatype": "google.events.cloud.visionai.v1.AnalysisEventData",
  "cloudeventTypes": [
    "google.cloud.visionai.analysis.v1.created",
    "google.cloud.visionai.analysis.v1.updated",
    "google.cloud.visionai.analysis.v1.deleted"
  ],
  "product": "Vision AI",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/AnalysisEventData",
  "definitions": {
    "AnalysisEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Analysis",
          "additionalProperties": true,
          "description": "Optional. The Analysis event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Analysis Event Data",
      "description": "The data within all Analysis events."
    },
    "Analysis": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of resource."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The create timestamp.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The update timestamp.",
          "format": "date-time"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "analysisDefinition": {
          "$ref": "#/definitions/AnalysisDefinition",
          "additionalProperties": true,
          "description": "The definition of the analysis."
        },
        "inputStreamsMapping": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map from the input parameter in the definition to the real stream. E.g., suppose you had a stream source operator named \"input-0\" and you try to receive from the real stream \"stream-0\". You can add the following mapping: [input-0: stream-0]."
        },
        "outputStreamsMapping": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map from the output parameter in the definition to the real stream. E.g., suppose you had a stream sink operator named \"output-0\" and you try to send to the real stream \"stream-0\". You can add the following mapping: [output-0: stream-0]."
        },
        "disableEventWatch": {
          "type": "boolean",
          "description": "Boolean flag to indicate whether you would like to disable the ability to automatically start a Process when new event happening in the input Stream. If you would like to start a Process manually, the field needs to be set to true."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Analysis",
      "description": "Message describing the Analysis object."
    },
    "AnalysisDefinition": {
      "properties": {
        "analyzers": {
          "items": {
            "$ref": "#/definitions/AnalyzerDefinition"
          },
          "type": "array",
          "description": "Analyzer definitions."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Analysis Definition",
      "description": "Defines a full analysis. This is a description of the overall live analytics pipeline. You may think of this as an edge list representation of a multigraph. This may be directly authored by a human in protobuf textformat, or it may be generated by a programming API (perhaps Python or JavaScript depending on context)."
    },
    "AnalyzerDefinition": {
      "properties": {
        "analyzer": {
          "type": "string",
          "description": "The name of this analyzer. Tentatively [a-z][a-z0-9]*(_[a-z0-9]+)*."
        },
        "operator": {
          "type": "string",
          "description": "The name of the operator that this analyzer runs. Must match the name of a supported operator."
        },
        "inputs": {
          "items": {
            "$ref": "#/definitions/StreamInput"
          },
          "type": "array",
          "description": "Input streams."
        },
        "attrs": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValue",
            "additionalProperties": true
          },
          "type": "object",
          "description": "The attribute values that this analyzer applies to the operator. Supply a mapping between the attribute names and the actual value you wish to apply. If an attribute name is omitted, then it will take a preconfigured default value."
        },
        "debugOptions": {
          "$ref": "#/definitions/DebugOptions",
          "additionalProperties": true,
          "description": "Debug options."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Analyzer Definition",
      "description": "Defines an Analyzer. An analyzer processes data from its input streams using the logic defined in the Operator that it represents. Of course, it produces data for the output streams declared in the Operator."
    },
    "DebugOptions": {
      "properties": {
        "environmentVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Environment variables."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Debug Options",
      "description": "Options available for debugging purposes only."
    },
    "StreamInput": {
      "properties": {
        "input": {
          "type": "string",
          "description": "The name of the stream input (as discussed above)."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Stream Input",
      "description": "The inputs to this analyzer. We accept input name references of the following form: <analyzer-name>:<output-argument-name> Example: Suppose you had an operator named \"SomeOp\" that has 2 output arguments, the first of which is named \"foo\" and the second of which is named \"bar\", and an operator named \"MyOp\" that accepts 2 inputs. Also suppose that there is an analyzer named \"some-analyzer\" that is running \"SomeOp\" and another analyzer named \"my-analyzer\" running \"MyOp\". To indicate that \"my-analyzer\" is to consume \"some-analyzer\"'s \"foo\" output as its first input and \"some-analyzer\"'s \"bar\" output as its second input, you can set this field to the following: input = [\"some-analyzer:foo\", \"some-analyzer:bar\"]"
    },
    "AttributeValue": {
      "properties": {
        "i": {
          "type": "integer",
          "description": "int."
        },
        "f": {
          "type": "number",
          "description": "float."
        },
        "b": {
          "type": "boolean",
          "description": "bool."
        },
        "s": {
          "type": "string",
          "description": "string.",
          "format": "binary",
          "binaryEncoding": "base64"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Attribute Value",
      "description": "Represents an actual value of an operator attribute."
    }
  }
}
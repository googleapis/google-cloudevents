{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/dataplex/v1/AssetEventData.json",
  "name": "AssetEventData",
  "examples": [],
  "package": "google.events.cloud.dataplex.v1",
  "datatype": "google.events.cloud.dataplex.v1.AssetEventData",
  "cloudeventTypes": [
    "google.cloud.dataplex.asset.v1.created",
    "google.cloud.dataplex.asset.v1.updated",
    "google.cloud.dataplex.asset.v1.deleted"
  ],
  "product": "Cloud Dataplex",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/AssetEventData",
  "definitions": {
    "AssetEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Asset",
          "additionalProperties": true,
          "description": "Optional. The Asset event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Asset Event Data",
      "description": "The data within all Asset events."
    },
    "Asset": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the asset, of the form: `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}`."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the asset was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time when the asset was last updated.",
          "format": "date-time"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. User defined labels for the asset."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the asset."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "ACTIVE",
            1,
            "CREATING",
            2,
            "DELETING",
            3,
            "ACTION_REQUIRED",
            4
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "State of a resource."
        },
        "resourceSpec": {
          "$ref": "#/definitions/ResourceSpec",
          "additionalProperties": true,
          "description": "Required. Specification of the resource that is referenced by this asset."
        },
        "resourceStatus": {
          "$ref": "#/definitions/ResourceStatus",
          "additionalProperties": true,
          "description": "Output only. Status of the resource referenced by this asset."
        },
        "securityStatus": {
          "$ref": "#/definitions/SecurityStatus",
          "additionalProperties": true,
          "description": "Output only. Status of the security policy applied to resource referenced by this asset."
        },
        "discoverySpec": {
          "$ref": "#/definitions/DiscoverySpec",
          "additionalProperties": true,
          "description": "Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone."
        },
        "discoveryStatus": {
          "$ref": "#/definitions/DiscoveryStatus",
          "additionalProperties": true,
          "description": "Output only. Status of the discovery feature applied to data referenced by this asset."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Asset",
      "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone."
    },
    "DiscoverySpec": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Optional. Whether discovery is enabled."
        },
        "includePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered.  For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "excludePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery.  For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "csvOptions": {
          "$ref": "#/definitions/CsvOptions",
          "additionalProperties": true,
          "description": "Optional. Configuration for CSV data."
        },
        "jsonOptions": {
          "$ref": "#/definitions/JsonOptions",
          "additionalProperties": true,
          "description": "Optional. Configuration for Json data."
        },
        "schedule": {
          "type": "string",
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, `CRON_TZ=America/New_York 1 * * * *`, or `TZ=America/New_York 1 * * * *`."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Discovery Spec",
      "description": "Settings to manage the metadata discovery and publishing for an asset."
    },
    "CsvOptions": {
      "properties": {
        "headerRows": {
          "type": "integer",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows."
        },
        "delimiter": {
          "type": "string",
          "description": "Optional. The delimiter being used to separate values. This defaults to ','."
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Csv Options",
      "description": "Describe CSV and similar semi-structured data formats."
    },
    "JsonOptions": {
      "properties": {
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean)."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Json Options",
      "description": "Describe JSON data format."
    },
    "DiscoveryStatus": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "SCHEDULED",
            1,
            "IN_PROGRESS",
            2,
            "PAUSED",
            3,
            "DISABLED",
            5
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "Current state of discovery."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "updateTime": {
          "type": "string",
          "description": "Last update time of the status.",
          "format": "date-time"
        },
        "lastRunTime": {
          "type": "string",
          "description": "The start time of the last discovery run.",
          "format": "date-time"
        },
        "stats": {
          "$ref": "#/definitions/Stats",
          "additionalProperties": true,
          "description": "Data Stats of the asset reported by discovery."
        },
        "lastRunDuration": {
          "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
          "type": "string",
          "description": "The duration of the last discovery run.",
          "format": "regex"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Discovery Status",
      "description": "Status of discovery for an asset."
    },
    "Stats": {
      "properties": {
        "dataItems": {
          "type": "integer",
          "description": "The count of data items within the referenced resource."
        },
        "dataSize": {
          "type": "integer",
          "description": "The number of stored data bytes within the referenced resource."
        },
        "tables": {
          "type": "integer",
          "description": "The count of table entities within the referenced resource."
        },
        "filesets": {
          "type": "integer",
          "description": "The count of fileset entities within the referenced resource."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Stats",
      "description": "The aggregated data statistics for the asset reported by discovery."
    },
    "ResourceSpec": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example:   `projects/{project_number}/buckets/{bucket_id}`   `projects/{project_number}/datasets/{dataset_id}`"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            0,
            "STORAGE_BUCKET",
            1,
            "BIGQUERY_DATASET",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Type",
          "description": "Type of resource."
        },
        "readAccessMode": {
          "enum": [
            "ACCESS_MODE_UNSPECIFIED",
            0,
            "DIRECT",
            1,
            "MANAGED",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Access Mode",
          "description": "Access Mode determines how data stored within the resource is read. This is only applicable to storage bucket assets."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Resource Spec",
      "description": "Identifies the cloud resource that is referenced by this asset."
    },
    "ResourceStatus": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "READY",
            1,
            "ERROR",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "The state of a resource."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "updateTime": {
          "type": "string",
          "description": "Last update time of the status.",
          "format": "date-time"
        },
        "managedAccessIdentity": {
          "type": "string",
          "description": "Output only. Service account associated with the BigQuery Connection."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Resource Status",
      "description": "Status of the resource referenced by an asset."
    },
    "SecurityStatus": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "READY",
            1,
            "APPLYING",
            2,
            "ERROR",
            3
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "The state of the security policy."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "updateTime": {
          "type": "string",
          "description": "Last update time of the status.",
          "format": "date-time"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Security Status",
      "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy."
    }
  }
}
{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/notebooks/v1/ScheduleEventData.json",
  "name": "ScheduleEventData",
  "examples": [],
  "package": "google.events.cloud.notebooks.v1",
  "datatype": "google.events.cloud.notebooks.v1.ScheduleEventData",
  "cloudeventTypes": [
    "google.cloud.notebooks.schedule.v1.deleted",
    "google.cloud.notebooks.schedule.v1.created"
  ],
  "product": "Notebooks",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/ScheduleEventData",
  "definitions": {
    "ScheduleEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Schedule",
          "additionalProperties": true,
          "description": "Optional. The Schedule event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Schedule Event Data",
      "description": "The data within all Schedule events."
    },
    "Execution": {
      "properties": {
        "executionTemplate": {
          "$ref": "#/definitions/ExecutionTemplate",
          "additionalProperties": true,
          "description": "execute metadata including name, hardware spec, region, labels, etc."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'."
        },
        "description": {
          "type": "string",
          "description": "A brief description of this execution."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time the Execution was instantiated.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the Execution was last updated.",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "QUEUED",
            1,
            "PREPARING",
            2,
            "RUNNING",
            3,
            "SUCCEEDED",
            4,
            "FAILED",
            5,
            "CANCELLING",
            6,
            "CANCELLED",
            7,
            "EXPIRED",
            9,
            "INITIALIZING",
            10
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "Enum description of the state of the underlying AIP job."
        },
        "outputNotebookFile": {
          "type": "string",
          "description": "Output notebook file generated by this execution"
        },
        "jobUri": {
          "type": "string",
          "description": "Output only. The URI of the external job used to execute the notebook."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Execution",
      "description": "The definition of a single executed notebook."
    },
    "ExecutionTemplate": {
      "properties": {
        "scaleTier": {
          "enum": [
            "SCALE_TIER_UNSPECIFIED",
            0,
            "BASIC",
            1,
            "STANDARD_1",
            2,
            "PREMIUM_1",
            3,
            "BASIC_GPU",
            4,
            "BASIC_TPU",
            5,
            "CUSTOM",
            6
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Scale Tier",
          "description": "Required. Specifies the machine types, the number of replicas for workers and parameter servers."
        },
        "masterType": {
          "type": "string",
          "description": "Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine)."
        },
        "acceleratorConfig": {
          "$ref": "#/definitions/SchedulerAcceleratorConfig",
          "additionalProperties": true,
          "description": "Configuration (count and accelerator type) for hardware running notebook execution."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions."
        },
        "inputNotebookFile": {
          "type": "string",
          "description": "Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: `gs://{bucket_name}/{folder}/{notebook_file_name}` Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`"
        },
        "containerImageUri": {
          "type": "string",
          "description": "Container Image URI to a DLVM Example: 'gcr.io/deeplearning-platform-release/base-cu100' More examples can be found at: https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container"
        },
        "outputNotebookFolder": {
          "type": "string",
          "description": "Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: `gs://{bucket_name}/{folder}` Ex: `gs://notebook_user/scheduled_notebooks`"
        },
        "paramsYamlFile": {
          "type": "string",
          "description": "Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`"
        },
        "parameters": {
          "type": "string",
          "description": "Parameters used within the 'input_notebook_file' notebook."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of a service account to use when running the execution. You must have the `iam.serviceAccounts.actAs` permission for the specified service account."
        },
        "jobType": {
          "enum": [
            "JOB_TYPE_UNSPECIFIED",
            0,
            "VERTEX_AI",
            1,
            "DATAPROC",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Job Type",
          "description": "The backend used for this execution."
        },
        "dataprocParameters": {
          "$ref": "#/definitions/DataprocParameters",
          "additionalProperties": true,
          "description": "Parameters used in Dataproc JobType executions."
        },
        "vertexAiParameters": {
          "$ref": "#/definitions/VertexAIParameters",
          "additionalProperties": true,
          "description": "Parameters used in Vertex AI JobType executions."
        },
        "kernelSpec": {
          "type": "string",
          "description": "Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file."
        },
        "tensorboard": {
          "type": "string",
          "description": "The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Execution Template",
      "description": "The description a notebook execution workload."
    },
    "DataprocParameters": {
      "properties": {
        "cluster": {
          "type": "string",
          "description": "URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dataproc Parameters",
      "description": "Parameters used in Dataproc JobType executions."
    },
    "SchedulerAcceleratorConfig": {
      "properties": {
        "type": {
          "enum": [
            "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED",
            0,
            "NVIDIA_TESLA_K80",
            1,
            "NVIDIA_TESLA_P100",
            2,
            "NVIDIA_TESLA_V100",
            3,
            "NVIDIA_TESLA_P4",
            4,
            "NVIDIA_TESLA_T4",
            5,
            "NVIDIA_TESLA_A100",
            10,
            "TPU_V2",
            6,
            "TPU_V3",
            7
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Scheduler Accelerator Type",
          "description": "Hardware accelerator types for AI Platform Training jobs."
        },
        "coreCount": {
          "type": "integer",
          "description": "Count of cores of this accelerator."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Scheduler Accelerator Config",
      "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported."
    },
    "VertexAIParameters": {
      "properties": {
        "network": {
          "type": "string",
          "description": "The full name of the Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network."
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Environment variables. At most 100 environment variables can be specified and unique. Example: `GCP_BUCKET=gs://my-bucket/samples/`"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Vertex AI Parameters",
      "description": "Parameters used in Vertex AI JobType executions."
    },
    "Schedule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens `-`, and underscores `_`."
        },
        "description": {
          "type": "string",
          "description": "A brief description of this environment."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "ENABLED",
            1,
            "PAUSED",
            2,
            "DISABLED",
            3,
            "UPDATE_FAILED",
            4,
            "INITIALIZING",
            5,
            "DELETING",
            6
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "State of the job."
        },
        "cronSchedule": {
          "type": "string",
          "description": "Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. `0 0 * * WED` = every Wednesday More examples: https://crontab.guru/examples.html"
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT)."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time the schedule was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the schedule was last updated.",
          "format": "date-time"
        },
        "executionTemplate": {
          "$ref": "#/definitions/ExecutionTemplate",
          "additionalProperties": true,
          "description": "Notebook Execution Template corresponding to this schedule."
        },
        "recentExecutions": {
          "items": {
            "$ref": "#/definitions/Execution"
          },
          "type": "array",
          "description": "Output only. The most recent execution names triggered from this schedule and their corresponding states."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Schedule",
      "description": "The definition of a schedule."
    }
  }
}
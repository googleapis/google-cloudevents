{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/iot/v1/RegistryEventData.json",
  "name": "RegistryEventData",
  "examples": [],
  "package": "google.events.cloud.iot.v1",
  "datatype": "google.events.cloud.iot.v1.RegistryEventData",
  "cloudeventTypes": [
    "google.cloud.iot.v1.DeviceManager.CreateDeviceRegistry",
    "google.cloud.iot.v1.DeviceManager.UpdateDeviceRegistry",
    "google.cloud.iot.v1.DeviceManager.DeleteDeviceRegistry"
  ],
  "product": "Cloud IoT",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/RegistryEventData",
  "definitions": {
    "RegistryEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/DeviceRegistry",
          "additionalProperties": true,
          "description": "Optional. The Registry event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Registry Event Data",
      "description": "The data within all Cloud IoT Registry events."
    },
    "DeviceRegistry": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of this device registry. For example, `myRegistry`."
        },
        "name": {
          "type": "string",
          "description": "The resource path name. For example, `projects/example-project/locations/us-central1/registries/my-registry`."
        },
        "eventNotificationConfigs": {
          "items": {
            "$ref": "#/definitions/EventNotificationConfig"
          },
          "type": "array",
          "description": "The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided."
        },
        "stateNotificationConfig": {
          "$ref": "#/definitions/StateNotificationConfig",
          "additionalProperties": true,
          "description": "The configuration for notification of new states received from the device. State updates are guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not guaranteed. For example, if permissions are misconfigured or the specified topic doesn't exist, no notification will be published but the state will still be stored in Cloud IoT Core."
        },
        "mqttConfig": {
          "$ref": "#/definitions/MqttConfig",
          "additionalProperties": true,
          "description": "The MQTT configuration for this device registry."
        },
        "httpConfig": {
          "$ref": "#/definitions/HttpConfig",
          "additionalProperties": true,
          "description": "The DeviceService (HTTP) configuration for this device registry."
        },
        "logLevel": {
          "enum": [
            "LOG_LEVEL_UNSPECIFIED",
            0,
            "NONE",
            10,
            "ERROR",
            20,
            "INFO",
            30,
            "DEBUG",
            40
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Log Level",
          "description": "**Beta Feature** The logging verbosity for device activity. Specifies which events should be written to logs. For example, if the LogLevel is ERROR, only events that terminate in errors will be logged. LogLevel is inclusive; enabling INFO logging will also enable ERROR logging."
        },
        "credentials": {
          "items": {
            "$ref": "#/definitions/RegistryCredential"
          },
          "type": "array",
          "description": "The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials. Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Device Registry",
      "description": "A container for a group of devices."
    },
    "EventNotificationConfig": {
      "properties": {
        "subfolderMatches": {
          "type": "string",
          "description": "If the subfolder name matches this string exactly, this configuration will be used. The string must not include the leading '/' character. If empty, all strings are matched. This field is used only for telemetry events; subfolders are not supported for state changes."
        },
        "pubsubTopicName": {
          "type": "string",
          "description": "A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Event Notification Config",
      "description": "The configuration for forwarding telemetry events."
    },
    "HttpConfig": {
      "properties": {
        "httpEnabledState": {
          "enum": [
            "HTTP_STATE_UNSPECIFIED",
            0,
            "HTTP_ENABLED",
            1,
            "HTTP_DISABLED",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Http State",
          "description": "Indicates whether DeviceService (HTTP) is enabled or disabled for the registry. See the field description for details."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Http Config",
      "description": "The configuration of the HTTP bridge for a device registry."
    },
    "MqttConfig": {
      "properties": {
        "mqttEnabledState": {
          "enum": [
            "MQTT_STATE_UNSPECIFIED",
            0,
            "MQTT_ENABLED",
            1,
            "MQTT_DISABLED",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Mqtt State",
          "description": "Indicates whether an MQTT connection is enabled or disabled. See the field description for details."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mqtt Config",
      "description": "The configuration of MQTT for a device registry."
    },
    "PublicKeyCertificate": {
      "properties": {
        "format": {
          "enum": [
            "UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT",
            0,
            "X509_CERTIFICATE_PEM",
            1
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Public Key Certificate Format",
          "description": "The supported formats for the public key."
        },
        "certificate": {
          "type": "string",
          "description": "The certificate data."
        },
        "x509Details": {
          "$ref": "#/definitions/X509CertificateDetails",
          "additionalProperties": true,
          "description": "[Output only] The certificate details. Used only for X.509 certificates."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Public Key Certificate",
      "description": "A public key certificate format and data."
    },
    "RegistryCredential": {
      "properties": {
        "publicKeyCertificate": {
          "$ref": "#/definitions/PublicKeyCertificate",
          "additionalProperties": true,
          "description": "A public key certificate used to verify the device credentials."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Registry Credential",
      "description": "A server-stored registry credential used to validate device credentials."
    },
    "StateNotificationConfig": {
      "properties": {
        "pubsubTopicName": {
          "type": "string",
          "description": "A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "State Notification Config",
      "description": "The configuration for notification of new states received from the device."
    },
    "X509CertificateDetails": {
      "properties": {
        "issuer": {
          "type": "string",
          "description": "The entity that signed the certificate."
        },
        "subject": {
          "type": "string",
          "description": "The entity the certificate and public key belong to."
        },
        "startTime": {
          "type": "string",
          "description": "The time the certificate becomes valid.",
          "format": "date-time"
        },
        "expiryTime": {
          "type": "string",
          "description": "The time the certificate becomes invalid.",
          "format": "date-time"
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The algorithm used to sign the certificate."
        },
        "publicKeyType": {
          "type": "string",
          "description": "The type of public key in the certificate."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "X 509 Certificate Details",
      "description": "Details of an X.509 certificate. For informational purposes only."
    }
  }
}
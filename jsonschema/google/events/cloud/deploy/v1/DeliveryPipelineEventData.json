{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/deploy/v1/DeliveryPipelineEventData.json",
  "name": "DeliveryPipelineEventData",
  "examples": [],
  "package": "google.events.cloud.deploy.v1",
  "datatype": "google.events.cloud.deploy.v1.DeliveryPipelineEventData",
  "cloudeventTypes": [
    "google.cloud.deploy.deliveryPipeline.v1.created",
    "google.cloud.deploy.deliveryPipeline.v1.updated",
    "google.cloud.deploy.deliveryPipeline.v1.deleted"
  ],
  "product": "Cloud Deploy",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/DeliveryPipelineEventData",
  "definitions": {
    "DeliveryPipelineEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/DeliveryPipeline",
          "additionalProperties": true,
          "description": "Optional. The DeliveryPipeline event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Delivery Pipeline Event Data",
      "description": "The data within all DeliveryPipeline events."
    },
    "Canary": {
      "properties": {
        "runtimeConfig": {
          "$ref": "#/definitions/RuntimeConfig",
          "additionalProperties": true,
          "description": "Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment."
        },
        "canaryDeployment": {
          "$ref": "#/definitions/CanaryDeployment",
          "additionalProperties": true,
          "description": "Configures the progressive based deployment for a Target."
        },
        "customCanaryDeployment": {
          "$ref": "#/definitions/CustomCanaryDeployment",
          "additionalProperties": true,
          "description": "Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Canary",
      "description": "Canary represents the canary deployment strategy."
    },
    "CanaryDeployment": {
      "properties": {
        "percentages": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "description": "Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 <= n < 100."
        },
        "verify": {
          "type": "boolean",
          "description": "Whether to run verify tests after each percentage deployment."
        },
        "predeploy": {
          "$ref": "#/definitions/Predeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase."
        },
        "postdeploy": {
          "$ref": "#/definitions/Postdeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Canary Deployment",
      "description": "CanaryDeployment represents the canary deployment configuration"
    },
    "CloudRunConfig": {
      "properties": {
        "automaticTrafficControl": {
          "type": "boolean",
          "description": "Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments."
        },
        "canaryRevisionTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of tags that are added to the canary revision while the canary phase is in progress."
        },
        "priorRevisionTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of tags that are added to the prior revision while the canary phase is in progress."
        },
        "stableRevisionTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of tags that are added to the final stable revision when the stable phase is applied."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Cloud Run Config",
      "description": "CloudRunConfig contains the Cloud Run runtime configuration."
    },
    "CustomCanaryDeployment": {
      "properties": {
        "phaseConfigs": {
          "items": {
            "$ref": "#/definitions/PhaseConfig"
          },
          "type": "array",
          "description": "Required. Configuration for each phase in the canary deployment in the order executed."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Custom Canary Deployment",
      "description": "CustomCanaryDeployment represents the custom canary deployment configuration."
    },
    "PhaseConfig": {
      "properties": {
        "phaseId": {
          "type": "string",
          "description": "Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
        },
        "percentage": {
          "type": "integer",
          "description": "Required. Percentage deployment for the phase."
        },
        "profiles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage."
        },
        "verify": {
          "type": "boolean",
          "description": "Whether to run verify tests after the deployment."
        },
        "predeploy": {
          "$ref": "#/definitions/Predeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase."
        },
        "postdeploy": {
          "$ref": "#/definitions/Postdeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Phase Config",
      "description": "PhaseConfig represents the configuration for a phase in the custom canary deployment."
    },
    "DeliveryPipeline": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/[a-z][a-z0-9\\-]{0,62}`."
        },
        "uid": {
          "type": "string",
          "description": "Output only. Unique identifier of the `DeliveryPipeline`."
        },
        "description": {
          "type": "string",
          "description": "Description of the `DeliveryPipeline`. Max length is 255 characters."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time at which the pipeline was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Most recent time at which the pipeline was updated.",
          "format": "date-time"
        },
        "serialPipeline": {
          "$ref": "#/definitions/SerialPipeline",
          "additionalProperties": true,
          "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`."
        },
        "condition": {
          "$ref": "#/definitions/PipelineCondition",
          "additionalProperties": true,
          "description": "Output only. Information around the state of the Delivery Pipeline."
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "suspended": {
          "type": "boolean",
          "description": "When suspended, no new releases or rollouts can be created, but in-progress ones will complete."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Delivery Pipeline",
      "description": "A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress."
    },
    "DeployParameters": {
      "properties": {
        "values": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Required. Values are deploy parameters in key-value pairs."
        },
        "matchTargetLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target)."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Deploy Parameters",
      "description": "DeployParameters contains deploy parameters information."
    },
    "KubernetesConfig": {
      "properties": {
        "gatewayServiceMesh": {
          "$ref": "#/definitions/GatewayServiceMesh",
          "additionalProperties": true,
          "description": "Kubernetes Gateway API service mesh configuration."
        },
        "serviceNetworking": {
          "$ref": "#/definitions/ServiceNetworking",
          "additionalProperties": true,
          "description": "Kubernetes Service networking configuration."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Kubernetes Config",
      "description": "KubernetesConfig contains the Kubernetes runtime configuration."
    },
    "GatewayServiceMesh": {
      "properties": {
        "httpRoute": {
          "type": "string",
          "description": "Required. Name of the Gateway API HTTPRoute."
        },
        "service": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Service."
        },
        "deployment": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service."
        },
        "routeUpdateWaitTime": {
          "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
          "type": "string",
          "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
          "format": "regex"
        },
        "stableCutbackDuration": {
          "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
          "type": "string",
          "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
          "format": "regex"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Gateway Service Mesh",
      "description": "Information about the Kubernetes Gateway API service mesh configuration."
    },
    "ServiceNetworking": {
      "properties": {
        "service": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Service."
        },
        "deployment": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service."
        },
        "disablePodOverprovisioning": {
          "type": "boolean",
          "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Service Networking",
      "description": "Information about the Kubernetes Service networking configuration."
    },
    "PipelineCondition": {
      "properties": {
        "pipelineReadyCondition": {
          "$ref": "#/definitions/PipelineReadyCondition",
          "additionalProperties": true,
          "description": "Details around the Pipeline's overall status."
        },
        "targetsPresentCondition": {
          "$ref": "#/definitions/TargetsPresentCondition",
          "additionalProperties": true,
          "description": "Details around targets enumerated in the pipeline."
        },
        "targetsTypeCondition": {
          "$ref": "#/definitions/TargetsTypeCondition",
          "additionalProperties": true,
          "description": "Details on the whether the targets enumerated in the pipeline are of the same type."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Pipeline Condition",
      "description": "PipelineCondition contains all conditions relevant to a Delivery Pipeline."
    },
    "PipelineReadyCondition": {
      "properties": {
        "status": {
          "type": "boolean",
          "description": "True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline."
        },
        "updateTime": {
          "type": "string",
          "description": "Last time the condition was updated.",
          "format": "date-time"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Pipeline Ready Condition",
      "description": "PipelineReadyCondition contains information around the status of the Pipeline."
    },
    "Postdeploy": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postdeploy",
      "description": "Postdeploy contains the postdeploy job configuration information."
    },
    "Predeploy": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Predeploy",
      "description": "Predeploy contains the predeploy job configuration information."
    },
    "RuntimeConfig": {
      "properties": {
        "kubernetes": {
          "$ref": "#/definitions/KubernetesConfig",
          "additionalProperties": true,
          "description": "Kubernetes runtime configuration."
        },
        "cloudRun": {
          "$ref": "#/definitions/CloudRunConfig",
          "additionalProperties": true,
          "description": "Cloud Run runtime configuration."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Runtime Config",
      "description": "RuntimeConfig contains the runtime specific configurations for a deployment strategy."
    },
    "SerialPipeline": {
      "properties": {
        "stages": {
          "items": {
            "$ref": "#/definitions/Stage"
          },
          "type": "array",
          "description": "Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Serial Pipeline",
      "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`."
    },
    "Stage": {
      "properties": {
        "targetId": {
          "type": "string",
          "description": "The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`."
        },
        "profiles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Skaffold profiles to use when rendering the manifest for this stage's `Target`."
        },
        "strategy": {
          "$ref": "#/definitions/Strategy",
          "additionalProperties": true,
          "description": "Optional. The strategy to use for a `Rollout` to this stage."
        },
        "deployParameters": {
          "items": {
            "$ref": "#/definitions/DeployParameters"
          },
          "type": "array",
          "description": "Optional. The deploy parameters to use for the target in this stage."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Stage",
      "description": "Stage specifies a location to which to deploy."
    },
    "Standard": {
      "properties": {
        "verify": {
          "type": "boolean",
          "description": "Whether to verify a deployment."
        },
        "predeploy": {
          "$ref": "#/definitions/Predeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present."
        },
        "postdeploy": {
          "$ref": "#/definitions/Postdeploy",
          "additionalProperties": true,
          "description": "Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Standard",
      "description": "Standard represents the standard deployment strategy."
    },
    "Strategy": {
      "properties": {
        "standard": {
          "$ref": "#/definitions/Standard",
          "additionalProperties": true,
          "description": "Standard deployment strategy executes a single deploy and allows verifying the deployment."
        },
        "canary": {
          "$ref": "#/definitions/Canary",
          "additionalProperties": true,
          "description": "Canary deployment strategy provides progressive percentage based deployments to a Target."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Strategy",
      "description": "Strategy contains deployment strategy information."
    },
    "TargetsPresentCondition": {
      "properties": {
        "status": {
          "type": "boolean",
          "description": "True if there aren't any missing Targets."
        },
        "missingTargets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of Target names that do not exist. For example, `projects/{project_id}/locations/{location_name}/targets/{target_name}`."
        },
        "updateTime": {
          "type": "string",
          "description": "Last time the condition was updated.",
          "format": "date-time"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Targets Present Condition",
      "description": "`TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist."
    },
    "TargetsTypeCondition": {
      "properties": {
        "status": {
          "type": "boolean",
          "description": "True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters."
        },
        "errorDetails": {
          "type": "string",
          "description": "Human readable error message."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Targets Type Condition",
      "description": "TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type."
    }
  }
}
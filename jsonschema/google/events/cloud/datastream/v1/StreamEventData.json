{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/datastream/v1/StreamEventData.json",
  "name": "StreamEventData",
  "examples": [],
  "package": "google.events.cloud.datastream.v1",
  "datatype": "google.events.cloud.datastream.v1.StreamEventData",
  "cloudeventTypes": [
    "google.cloud.datastream.stream.v1.created",
    "google.cloud.datastream.stream.v1.updated",
    "google.cloud.datastream.stream.v1.deleted"
  ],
  "product": "Datastream",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/StreamEventData",
  "definitions": {
    "StreamEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/Stream",
          "additionalProperties": true,
          "description": "Optional. The Stream event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Stream Event Data",
      "description": "The data within all Stream events."
    },
    "AvroFileFormat": {
      "additionalProperties": true,
      "type": "object",
      "title": "Avro File Format",
      "description": "AVRO file format configuration."
    },
    "BigQueryDestinationConfig": {
      "properties": {
        "singleTargetDataset": {
          "$ref": "#/definitions/SingleTargetDataset",
          "additionalProperties": true,
          "description": "Single destination dataset."
        },
        "sourceHierarchyDatasets": {
          "$ref": "#/definitions/SourceHierarchyDatasets",
          "additionalProperties": true,
          "description": "Source hierarchy datasets."
        },
        "dataFreshness": {
          "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
          "type": "string",
          "description": "The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.",
          "format": "regex"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Big Query Destination Config"
    },
    "SingleTargetDataset": {
      "properties": {
        "datasetId": {
          "type": "string",
          "description": "The dataset ID of the target dataset."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Single Target Dataset",
      "description": "A single target dataset to which all data will be streamed."
    },
    "SourceHierarchyDatasets": {
      "properties": {
        "datasetTemplate": {
          "$ref": "#/definitions/DatasetTemplate",
          "additionalProperties": true
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Source Hierarchy Datasets",
      "description": "Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy."
    },
    "DatasetTemplate": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations."
        },
        "datasetIdPrefix": {
          "type": "string",
          "description": "If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. <prefix>_<dataset_name>."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Dataset Template",
      "description": "Dataset template used for dynamic dataset creation."
    },
    "DestinationConfig": {
      "properties": {
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "gcsDestinationConfig": {
          "$ref": "#/definitions/GcsDestinationConfig",
          "additionalProperties": true,
          "description": "A configuration for how data should be loaded to Cloud Storage."
        },
        "bigqueryDestinationConfig": {
          "$ref": "#/definitions/BigQueryDestinationConfig",
          "additionalProperties": true,
          "description": "BigQuery destination configuration."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Destination Config",
      "description": "The configuration of the stream destination."
    },
    "Error": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "A title that explains the reason for the error."
        },
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        },
        "message": {
          "type": "string",
          "description": "A message containing more information about the error that occurred."
        },
        "errorTime": {
          "type": "string",
          "description": "The time when the error occurred.",
          "format": "date-time"
        },
        "details": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Additional information about the error."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Error",
      "description": "Represent a user-facing Error."
    },
    "GcsDestinationConfig": {
      "properties": {
        "path": {
          "type": "string",
          "description": "Path inside the Cloud Storage bucket to write data to."
        },
        "fileRotationMb": {
          "type": "integer",
          "description": "The maximum file size to be saved in the bucket."
        },
        "fileRotationInterval": {
          "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
          "type": "string",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created.",
          "format": "regex"
        },
        "avroFileFormat": {
          "$ref": "#/definitions/AvroFileFormat",
          "additionalProperties": true,
          "description": "AVRO file format configuration."
        },
        "jsonFileFormat": {
          "$ref": "#/definitions/JsonFileFormat",
          "additionalProperties": true,
          "description": "JSON file format configuration."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Gcs Destination Config",
      "description": "Google Cloud Storage destination configuration"
    },
    "JsonFileFormat": {
      "properties": {
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            0,
            "NO_SCHEMA_FILE",
            1,
            "AVRO_SCHEMA_FILE",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Schema File Format",
          "description": "Schema file format."
        },
        "compression": {
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            0,
            "NO_COMPRESSION",
            1,
            "GZIP",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Json Compression",
          "description": "Json file compression."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Json File Format",
      "description": "JSON file format configuration."
    },
    "MysqlColumn": {
      "properties": {
        "column": {
          "type": "string",
          "description": "Column name."
        },
        "dataType": {
          "type": "string",
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html"
        },
        "length": {
          "type": "integer",
          "description": "Column length."
        },
        "collation": {
          "type": "string",
          "description": "Column collation."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "The ordinal position of the column in the table."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mysql Column",
      "description": "MySQL Column."
    },
    "MysqlDatabase": {
      "properties": {
        "database": {
          "type": "string",
          "description": "Database name."
        },
        "mysqlTables": {
          "items": {
            "$ref": "#/definitions/MysqlTable"
          },
          "type": "array",
          "description": "Tables in the database."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mysql Database",
      "description": "MySQL database."
    },
    "MysqlRdbms": {
      "properties": {
        "mysqlDatabases": {
          "items": {
            "$ref": "#/definitions/MysqlDatabase"
          },
          "type": "array",
          "description": "Mysql databases on the server"
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mysql Rdbms",
      "description": "MySQL database structure"
    },
    "MysqlSourceConfig": {
      "properties": {
        "includeObjects": {
          "$ref": "#/definitions/MysqlRdbms",
          "additionalProperties": true,
          "description": "MySQL objects to retrieve from the source."
        },
        "excludeObjects": {
          "$ref": "#/definitions/MysqlRdbms",
          "additionalProperties": true,
          "description": "MySQL objects to exclude from the stream."
        },
        "maxConcurrentCdcTasks": {
          "type": "integer",
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mysql Source Config",
      "description": "MySQL source configuration"
    },
    "MysqlTable": {
      "properties": {
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "mysqlColumns": {
          "items": {
            "$ref": "#/definitions/MysqlColumn"
          },
          "type": "array",
          "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Mysql Table",
      "description": "MySQL table."
    },
    "OracleColumn": {
      "properties": {
        "column": {
          "type": "string",
          "description": "Column name."
        },
        "dataType": {
          "type": "string",
          "description": "The Oracle data type."
        },
        "length": {
          "type": "integer",
          "description": "Column length."
        },
        "precision": {
          "type": "integer",
          "description": "Column precision."
        },
        "scale": {
          "type": "integer",
          "description": "Column scale."
        },
        "encoding": {
          "type": "string",
          "description": "Column encoding."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "The ordinal position of the column in the table."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Oracle Column",
      "description": "Oracle Column."
    },
    "OracleRdbms": {
      "properties": {
        "oracleSchemas": {
          "items": {
            "$ref": "#/definitions/OracleSchema"
          },
          "type": "array",
          "description": "Oracle schemas/databases in the database server."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Oracle Rdbms",
      "description": "Oracle database structure."
    },
    "OracleSchema": {
      "properties": {
        "schema": {
          "type": "string",
          "description": "Schema name."
        },
        "oracleTables": {
          "items": {
            "$ref": "#/definitions/OracleTable"
          },
          "type": "array",
          "description": "Tables in the schema."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Oracle Schema",
      "description": "Oracle schema."
    },
    "OracleSourceConfig": {
      "properties": {
        "includeObjects": {
          "$ref": "#/definitions/OracleRdbms",
          "additionalProperties": true,
          "description": "Oracle objects to include in the stream."
        },
        "excludeObjects": {
          "$ref": "#/definitions/OracleRdbms",
          "additionalProperties": true,
          "description": "Oracle objects to exclude from the stream."
        },
        "maxConcurrentCdcTasks": {
          "type": "integer",
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used."
        },
        "dropLargeObjects": {
          "$ref": "#/definitions/DropLargeObjects",
          "additionalProperties": true,
          "description": "Drop large object values."
        },
        "streamLargeObjects": {
          "$ref": "#/definitions/StreamLargeObjects",
          "additionalProperties": true,
          "description": "Stream large object values. NOTE: This feature is currently experimental."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Oracle Source Config",
      "description": "Oracle data source configuration"
    },
    "DropLargeObjects": {
      "additionalProperties": true,
      "type": "object",
      "title": "Drop Large Objects",
      "description": "Configuration to drop large object values."
    },
    "StreamLargeObjects": {
      "additionalProperties": true,
      "type": "object",
      "title": "Stream Large Objects",
      "description": "Configuration to stream large object values."
    },
    "OracleTable": {
      "properties": {
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "oracleColumns": {
          "items": {
            "$ref": "#/definitions/OracleColumn"
          },
          "type": "array",
          "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Oracle Table",
      "description": "Oracle table."
    },
    "PostgresqlColumn": {
      "properties": {
        "column": {
          "type": "string",
          "description": "Column name."
        },
        "dataType": {
          "type": "string",
          "description": "The PostgreSQL data type."
        },
        "length": {
          "type": "integer",
          "description": "Column length."
        },
        "precision": {
          "type": "integer",
          "description": "Column precision."
        },
        "scale": {
          "type": "integer",
          "description": "Column scale."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "The ordinal position of the column in the table."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postgresql Column",
      "description": "PostgreSQL Column."
    },
    "PostgresqlRdbms": {
      "properties": {
        "postgresqlSchemas": {
          "items": {
            "$ref": "#/definitions/PostgresqlSchema"
          },
          "type": "array",
          "description": "PostgreSQL schemas in the database server."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postgresql Rdbms",
      "description": "PostgreSQL database structure."
    },
    "PostgresqlSchema": {
      "properties": {
        "schema": {
          "type": "string",
          "description": "Schema name."
        },
        "postgresqlTables": {
          "items": {
            "$ref": "#/definitions/PostgresqlTable"
          },
          "type": "array",
          "description": "Tables in the schema."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postgresql Schema",
      "description": "PostgreSQL schema."
    },
    "PostgresqlSourceConfig": {
      "properties": {
        "includeObjects": {
          "$ref": "#/definitions/PostgresqlRdbms",
          "additionalProperties": true,
          "description": "PostgreSQL objects to include in the stream."
        },
        "excludeObjects": {
          "$ref": "#/definitions/PostgresqlRdbms",
          "additionalProperties": true,
          "description": "PostgreSQL objects to exclude from the stream."
        },
        "replicationSlot": {
          "type": "string",
          "description": "Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin."
        },
        "publication": {
          "type": "string",
          "description": "Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postgresql Source Config",
      "description": "PostgreSQL data source configuration"
    },
    "PostgresqlTable": {
      "properties": {
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "postgresqlColumns": {
          "items": {
            "$ref": "#/definitions/PostgresqlColumn"
          },
          "type": "array",
          "description": "PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Postgresql Table",
      "description": "PostgreSQL table."
    },
    "SourceConfig": {
      "properties": {
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "oracleSourceConfig": {
          "$ref": "#/definitions/OracleSourceConfig",
          "additionalProperties": true,
          "description": "Oracle data source configuration."
        },
        "mysqlSourceConfig": {
          "$ref": "#/definitions/MysqlSourceConfig",
          "additionalProperties": true,
          "description": "MySQL data source configuration."
        },
        "postgresqlSourceConfig": {
          "$ref": "#/definitions/PostgresqlSourceConfig",
          "additionalProperties": true,
          "description": "PostgreSQL data source configuration."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Source Config",
      "description": "The configuration of the stream source."
    },
    "Stream": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The stream's name."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The creation time of the stream.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update time of the stream.",
          "format": "date-time"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "sourceConfig": {
          "$ref": "#/definitions/SourceConfig",
          "additionalProperties": true,
          "description": "Required. Source connection profile configuration."
        },
        "destinationConfig": {
          "$ref": "#/definitions/DestinationConfig",
          "additionalProperties": true,
          "description": "Required. Destination connection profile configuration."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            0,
            "NOT_STARTED",
            1,
            "RUNNING",
            2,
            "PAUSED",
            3,
            "MAINTENANCE",
            4,
            "FAILED",
            5,
            "FAILED_PERMANENTLY",
            6,
            "STARTING",
            7,
            "DRAINING",
            8
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "State",
          "description": "Stream state."
        },
        "backfillAll": {
          "$ref": "#/definitions/BackfillAllStrategy",
          "additionalProperties": true,
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded."
        },
        "backfillNone": {
          "$ref": "#/definitions/BackfillNoneStrategy",
          "additionalProperties": true,
          "description": "Do not automatically backfill any objects."
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array",
          "description": "Output only. Errors on the Stream."
        },
        "customerManagedEncryptionKey": {
          "type": "string",
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Stream",
      "description": "A resource representing streaming data from a source to a destination."
    },
    "BackfillAllStrategy": {
      "properties": {
        "oracleExcludedObjects": {
          "$ref": "#/definitions/OracleRdbms",
          "additionalProperties": true,
          "description": "Oracle data source objects to avoid backfilling."
        },
        "mysqlExcludedObjects": {
          "$ref": "#/definitions/MysqlRdbms",
          "additionalProperties": true,
          "description": "MySQL data source objects to avoid backfilling."
        },
        "postgresqlExcludedObjects": {
          "$ref": "#/definitions/PostgresqlRdbms",
          "additionalProperties": true,
          "description": "PostgreSQL data source objects to avoid backfilling."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Backfill All Strategy",
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded."
    },
    "BackfillNoneStrategy": {
      "additionalProperties": true,
      "type": "object",
      "title": "Backfill None Strategy",
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects."
    }
  }
}
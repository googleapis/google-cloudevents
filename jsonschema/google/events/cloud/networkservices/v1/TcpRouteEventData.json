{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/networkservices/v1/TcpRouteEventData.json",
  "name": "TcpRouteEventData",
  "examples": [],
  "package": "google.events.cloud.networkservices.v1",
  "datatype": "google.events.cloud.networkservices.v1.TcpRouteEventData",
  "cloudeventTypes": [
    "google.cloud.networkservices.tcpRoute.v1.created",
    "google.cloud.networkservices.tcpRoute.v1.updated",
    "google.cloud.networkservices.tcpRoute.v1.deleted"
  ],
  "product": "Network Services",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/TcpRouteEventData",
  "definitions": {
    "TcpRouteEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/TcpRoute",
          "additionalProperties": true,
          "description": "Optional. The TcpRoute event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Tcp Route Event Data",
      "description": "The data within all TcpRoute events."
    },
    "TcpRoute": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of the TcpRoute resource. It matches pattern `projects/*/locations/global/tcpRoutes/tcp_route_name>`."
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. Server-defined URL of this resource"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was updated.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Optional. A free-text description of the resource. Max length 1024 characters."
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/RouteRule"
          },
          "type": "array",
          "description": "Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match."
        },
        "meshes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/<mesh_name>` The attached Mesh should be of a type SIDECAR"
        },
        "gateways": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/<gateway_name>`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Set of label tags associated with the TcpRoute resource."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Tcp Route",
      "description": "TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource."
    },
    "RouteAction": {
      "properties": {
        "destinations": {
          "items": {
            "$ref": "#/definitions/RouteDestination"
          },
          "type": "array",
          "description": "Optional. The destination services to which traffic should be forwarded. At least one destination service is required. Only one of route destination or original destination can be set."
        },
        "originalDestination": {
          "type": "boolean",
          "description": "Optional. If true, Router will use the destination IP and port of the original connection as the destination of the request. Default is false. Only one of route destinations or original destination can be set."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Route Action",
      "description": "The specifications for routing traffic and applying associated policies."
    },
    "RouteDestination": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Required. The URL of a BackendService to route traffic to."
        },
        "weight": {
          "type": "integer",
          "description": "Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as:         weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Route Destination",
      "description": "Describe the destination for traffic to be routed to."
    },
    "RouteMatch": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Required. Must be specified in the CIDR range format. A CIDR range consists of an IP Address and a prefix length to construct the subnet mask. By default, the prefix length is 32 (i.e. matches a single IP address). Only IPV4 addresses are supported. Examples: \"10.0.0.1\" - matches against this exact IP address. \"10.0.0.0/8\" - matches against any IP address within the 10.0.0.0 subnet and 255.255.255.0 mask. \"0.0.0.0/0\" - matches against any IP address'."
        },
        "port": {
          "type": "string",
          "description": "Required. Specifies the destination port to match against."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Route Match",
      "description": "RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic."
    },
    "RouteRule": {
      "properties": {
        "matches": {
          "items": {
            "$ref": "#/definitions/RouteMatch"
          },
          "type": "array",
          "description": "Optional. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic."
        },
        "action": {
          "$ref": "#/definitions/RouteAction",
          "additionalProperties": true,
          "description": "Required. The detailed rule defining how to route matched traffic."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Route Rule",
      "description": "Specifies how to match traffic and how to route traffic when traffic is matched."
    }
  }
}
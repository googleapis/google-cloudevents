{
  "$id": "https://googleapis.github.io/google-cloudevents/jsonschema/google/events/cloud/networkservices/v1/EndpointPolicyEventData.json",
  "name": "EndpointPolicyEventData",
  "examples": [],
  "package": "google.events.cloud.networkservices.v1",
  "datatype": "google.events.cloud.networkservices.v1.EndpointPolicyEventData",
  "cloudeventTypes": [
    "google.cloud.networkservices.endpointPolicy.v1.created",
    "google.cloud.networkservices.endpointPolicy.v1.updated",
    "google.cloud.networkservices.endpointPolicy.v1.deleted"
  ],
  "product": "Network Services",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/EndpointPolicyEventData",
  "definitions": {
    "EndpointPolicyEventData": {
      "properties": {
        "payload": {
          "$ref": "#/definitions/EndpointPolicy",
          "additionalProperties": true,
          "description": "Optional. The EndpointPolicy event payload. Unset for deletion events."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Endpoint Policy Event Data",
      "description": "The data within all EndpointPolicy events."
    },
    "EndpointMatcher": {
      "properties": {
        "metadataLabelMatcher": {
          "$ref": "#/definitions/MetadataLabelMatcher",
          "additionalProperties": true,
          "description": "The matcher is based on node metadata presented by xDS clients."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Endpoint Matcher",
      "description": "A definition of a matcher that selects endpoints to which the policies should be applied."
    },
    "MetadataLabelMatcher": {
      "properties": {
        "metadataLabelMatchCriteria": {
          "enum": [
            "METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED",
            0,
            "MATCH_ANY",
            1,
            "MATCH_ALL",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Metadata Label Match Criteria",
          "description": "Possible criteria values that define logic of how matching is made."
        },
        "metadataLabels": {
          "items": {
            "$ref": "#/definitions/MetadataLabels"
          },
          "type": "array",
          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list can have at most 64 entries. The list can be empty if the match criteria is MATCH_ANY, to specify a wildcard match (i.e this matches any client)."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Metadata Label Matcher",
      "description": "The matcher that is based on node metadata presented by xDS clients."
    },
    "MetadataLabels": {
      "properties": {
        "labelName": {
          "type": "string",
          "description": "Required. Label name presented as key in xDS Node Metadata."
        },
        "labelValue": {
          "type": "string",
          "description": "Required. Label value presented as value corresponding to the above key, in xDS Node Metadata."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Metadata Labels",
      "description": "Defines a name-pair value for a single label."
    },
    "EndpointPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was created.",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The timestamp when the resource was updated.",
          "format": "date-time"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Set of label tags associated with the EndpointPolicy resource."
        },
        "type": {
          "enum": [
            "ENDPOINT_POLICY_TYPE_UNSPECIFIED",
            0,
            "SIDECAR_PROXY",
            1,
            "GRPC_SERVER",
            2
          ],
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "Endpoint Policy Type",
          "description": "The type of endpoint policy."
        },
        "authorizationPolicy": {
          "type": "string",
          "description": "Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint."
        },
        "endpointMatcher": {
          "$ref": "#/definitions/EndpointMatcher",
          "additionalProperties": true,
          "description": "Required. A matcher that selects endpoints to which the policies should be applied."
        },
        "trafficPortSelector": {
          "$ref": "#/definitions/TrafficPortSelector",
          "additionalProperties": true,
          "description": "Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports."
        },
        "description": {
          "type": "string",
          "description": "Optional. A free-text description of the resource. Max length 1024 characters."
        },
        "serverTlsPolicy": {
          "type": "string",
          "description": "Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint."
        },
        "clientTlsPolicy": {
          "type": "string",
          "description": "Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Endpoint Policy",
      "description": "EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080."
    },
    "TrafficPortSelector": {
      "properties": {
        "ports": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected."
        }
      },
      "additionalProperties": true,
      "type": "object",
      "title": "Traffic Port Selector",
      "description": "Specification of a port-based selector."
    }
  }
}
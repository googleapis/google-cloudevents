// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.firebase.auth.v2;

import "google/events/cloudevent.proto";
import "google/events/firebase/auth/v2/data.proto";

option csharp_namespace = "Google.Events.Protobuf.Firebase.Auth.V2";
option php_namespace = "Google\\Events\\Firebase\\Auth\\V2";
option ruby_package = "Google::Events::Firebase::Auth::V2";
option (google.events.cloud_event_product) = "Firebase Authentication";
option (google.events.cloud_event_extension_attribute) = {
  name: "tenantid"
  description: "The tenant ID associated with the user account."
};

// The CloudEvent raised when a Firebase user is created.
message UserCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.firebase.auth.user.v2.created";
  option (google.events.cloud_event_extension_name) = "tenantid";

  // The data associated with the event.
  AuthEventData data = 1;
}

message UserUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.firebase.auth.user.v2.updated";
  option (google.events.cloud_event_extension_name) = "tenantid";

  // The original data associated with the user.
  AuthEventData data = 1;
}

// The CloudEvent raised when a Firebase user is deleted.
message UserDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.firebase.auth.user.v2.deleted";
  option (google.events.cloud_event_extension_name) = "tenantid";

  // The data associated with the event.
  AuthEventData data = 1;
}

// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.firebase.firebasealerts.v1;

import "google/protobuf/timestamp.proto";
import "google/type/date.proto";

option csharp_namespace = "Google.Events.Protobuf.Firebase.FirebaseAlerts.V1";
option java_package = "com.google.events.firebase.firebasealerts.v1";
option java_outer_classname = "CloudEventPayloadProto";

// -- Crashlytics

// Basic information of the Crashlytics issue
message CrashlyticsIssue {
  string id = 1;
  string title = 2;
  string subtitle = 3;
  string app_version = 4;
}

message CrashlyticsNewFatalIssuePayload {
  // Basic information of the Crashlytics issue
  CrashlyticsIssue issue = 1;
}

message CrashlyticsNewNonfatalIssuePayload {
  // Basic information of the Crashlytics issue
  CrashlyticsIssue issue = 1;
}

message CrashlyticsRegressionAlertPayload {
  // The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
  string type = 1;

  // Basic information of the Crashlytics issue
  CrashlyticsIssue issue = 2;

  // The time that the Crashlytics issues was most recently resolved before it
  // began to reoccur
  google.protobuf.Timestamp resolve_time = 3;
}

message CrashlyticsVelocityAlertPayload {
  // Basic information of the Crashlytics issue
  CrashlyticsIssue issue = 1;

  // The time that the Crashlytics issue gets created
  google.protobuf.Timestamp create_time = 2;

  // The number of user sessions for the given app version that had this
  // specific crash issue in the time period used to trigger the velocity alert,
  // which is currently 1h
  int64 crash_count = 3;

  // The percentage of user sessions for the given app version that had this
  // specific crash issue in the time period used to trigger the velocity alert,
  // which is currently 1h
  double crash_percentage = 4;
  // The first app version where this issue was seen, and not necessarily the
  // version that has triggered the alert
  string first_version = 5;
}

message CrashlyticsStabilityDigestPayload {
  message TrendingIssueDetails {
    // The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
    string type = 1;

    // Basic information of the Crashlytics issue
    CrashlyticsIssue issue = 2;

    // The number of crashes that occurred with the issue
    int64 event_count = 3;

    // The number of distinct users that were affected by the issue
    int64 user_count = 4;
  }

  // The date that the digest gets created, issues in the digest should
  // have the same date as the digest date
  google.type.Date digest_date = 5;

  // A stability digest contains several trending Crashlytics issues
  repeated TrendingIssueDetails trending_issues = 6;
}

message CrashlyticsNewAnrIssuePayload {
  CrashlyticsIssue issue = 1;
}

// -- App Distribution

message AppDistroNewTesterIosDevicePayload {
  string tester_name = 1;
  string tester_email = 2;
  string tester_device_model_name = 3;
  string tester_device_identifier = 4;
}

message AppDistroInAppFeedbackPayload {
  // Resource name. Format:
  // projects/{project_number}/apps/{app_id}/releases/{release_id}/feedbackReports/{feedback_id}
  string feedback_report = 1;
  // Deep link back to the Firebase console.
  string feedback_console_uri = 8;
  // Name of the tester.
  string tester_name = 2;
  // Email address of the tester.
  string tester_email = 3;
  // Display version of the release. For an Android release, the display version
  // is the `versionName`. For an iOS release, the display version is the
  // `CFBundleShortVersionString`.
  string display_version = 4;
  // Build version of the release. For an Android release, the build version
  // is the `versionCode`. For an iOS release, the build version is the
  // `CFBundleVersion`.
  string build_version = 5;
  // Text entered by the tester.
  string text = 6;
  // URIs to download screenshot(s).  These URIs are fast expiring.
  repeated string screenshot_uris = 7;
}

// -- Billing

message BillingPlanUpdatePayload {
  // A Firebase plan
  string billing_plan = 1;

  // The email address of the person that triggered billing plan change
  string principal_email = 2;

  // The type of the notification, e.g. upgrade, downgrade
  string notification_type = 3;
}

message BillingPlanAutomatedUpdatePayload {
  // A Firebase plan
  string billing_plan = 1;

  // The type of the notification, e.g. upgrade, downgrade
  string notification_type = 2;
}

// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.cloud.dataplex.v1;

import "google/events/cloud/dataplex/v1/data.proto";
import "google/events/cloudevent.proto";

option csharp_namespace = "Google.Events.Protobuf.Cloud.Dataplex.V1";
option (google.events.cloud_event_product) = "Cloud Dataplex";
option (google.events.cloud_event_extension_attribute) = {
  name: "datataxonomyid"
  description: "The resource ID of the DataTaxonomyId triggering the event."
  camel_case_name: "dataTaxonomyId"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "dataattributebindingid"
  description: "The resource ID of the DataAttributeBindingId triggering the event."
  camel_case_name: "dataAttributeBindingId"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "datataxonomy"
  description: "The resource ID of the Datataxonomy triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "dataattributeid"
  description: "The resource ID of the DataAttributeId triggering the event."
  camel_case_name: "dataAttributeId"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "datascan"
  description: "The resource ID of the Datascan triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "lake"
  description: "The resource ID of the Lake triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "zone"
  description: "The resource ID of the Zone triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "asset"
  description: "The resource ID of the Asset triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "task"
  description: "The resource ID of the Task triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "environment"
  description: "The resource ID of the Environment triggering the event."
};

// The CloudEvent raised when a DataTaxonomy is created.
message DataTaxonomyCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataTaxonomy.v1.created";
  option (google.events.cloud_event_extension_name) = "datataxonomyid";

  // The data associated with the event.
  DataTaxonomyEventData data = 1;
}

// The CloudEvent raised when a DataTaxonomy is updated.
message DataTaxonomyUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataTaxonomy.v1.updated";
  option (google.events.cloud_event_extension_name) = "datataxonomyid";

  // The data associated with the event.
  DataTaxonomyEventData data = 1;
}

// The CloudEvent raised when a DataTaxonomy is deleted.
message DataTaxonomyDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataTaxonomy.v1.deleted";
  option (google.events.cloud_event_extension_name) = "datataxonomyid";

  // The data associated with the event.
  DataTaxonomyEventData data = 1;
}

// The CloudEvent raised when a DataAttributeBinding is created.
message DataAttributeBindingCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttributeBinding.v1.created";
  option (google.events.cloud_event_extension_name) = "dataattributebindingid";

  // The data associated with the event.
  DataAttributeBindingEventData data = 1;
}

// The CloudEvent raised when a DataAttributeBinding is updated.
message DataAttributeBindingUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttributeBinding.v1.updated";
  option (google.events.cloud_event_extension_name) = "dataattributebindingid";

  // The data associated with the event.
  DataAttributeBindingEventData data = 1;
}

// The CloudEvent raised when a DataAttributeBinding is deleted.
message DataAttributeBindingDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttributeBinding.v1.deleted";
  option (google.events.cloud_event_extension_name) = "dataattributebindingid";

  // The data associated with the event.
  DataAttributeBindingEventData data = 1;
}

// The CloudEvent raised when a DataAttribute is created.
message DataAttributeCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttribute.v1.created";
  option (google.events.cloud_event_extension_name) = "datataxonomy";
  option (google.events.cloud_event_extension_name) = "dataattributeid";

  // The data associated with the event.
  DataAttributeEventData data = 1;
}

// The CloudEvent raised when a DataAttribute is updated.
message DataAttributeUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttribute.v1.updated";
  option (google.events.cloud_event_extension_name) = "datataxonomy";
  option (google.events.cloud_event_extension_name) = "dataattributeid";

  // The data associated with the event.
  DataAttributeEventData data = 1;
}

// The CloudEvent raised when a DataAttribute is deleted.
message DataAttributeDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataAttribute.v1.deleted";
  option (google.events.cloud_event_extension_name) = "datataxonomy";
  option (google.events.cloud_event_extension_name) = "dataattributeid";

  // The data associated with the event.
  DataAttributeEventData data = 1;
}

// The CloudEvent raised when a DataScan is created.
message DataScanCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataScan.v1.created";
  option (google.events.cloud_event_extension_name) = "datascan";

  // The data associated with the event.
  DataScanEventData data = 1;
}

// The CloudEvent raised when a DataScan is updated.
message DataScanUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataScan.v1.updated";
  option (google.events.cloud_event_extension_name) = "datascan";

  // The data associated with the event.
  DataScanEventData data = 1;
}

// The CloudEvent raised when a DataScan is deleted.
message DataScanDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.dataScan.v1.deleted";
  option (google.events.cloud_event_extension_name) = "datascan";

  // The data associated with the event.
  DataScanEventData data = 1;
}

// The CloudEvent raised when a Lake is created.
message LakeCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.lake.v1.created";
  option (google.events.cloud_event_extension_name) = "lake";

  // The data associated with the event.
  LakeEventData data = 1;
}

// The CloudEvent raised when a Lake is updated.
message LakeUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.lake.v1.updated";
  option (google.events.cloud_event_extension_name) = "lake";

  // The data associated with the event.
  LakeEventData data = 1;
}

// The CloudEvent raised when a Lake is deleted.
message LakeDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.lake.v1.deleted";
  option (google.events.cloud_event_extension_name) = "lake";

  // The data associated with the event.
  LakeEventData data = 1;
}

// The CloudEvent raised when a Zone is created.
message ZoneCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.zone.v1.created";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";

  // The data associated with the event.
  ZoneEventData data = 1;
}

// The CloudEvent raised when a Zone is updated.
message ZoneUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.zone.v1.updated";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";

  // The data associated with the event.
  ZoneEventData data = 1;
}

// The CloudEvent raised when a Zone is deleted.
message ZoneDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.zone.v1.deleted";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";

  // The data associated with the event.
  ZoneEventData data = 1;
}

// The CloudEvent raised when an Asset is created.
message AssetCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.asset.v1.created";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";
  option (google.events.cloud_event_extension_name) = "asset";

  // The data associated with the event.
  AssetEventData data = 1;
}

// The CloudEvent raised when an Asset is updated.
message AssetUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.asset.v1.updated";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";
  option (google.events.cloud_event_extension_name) = "asset";

  // The data associated with the event.
  AssetEventData data = 1;
}

// The CloudEvent raised when an Asset is deleted.
message AssetDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.asset.v1.deleted";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "zone";
  option (google.events.cloud_event_extension_name) = "asset";

  // The data associated with the event.
  AssetEventData data = 1;
}

// The CloudEvent raised when a Task is created.
message TaskCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.task.v1.created";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "task";

  // The data associated with the event.
  TaskEventData data = 1;
}

// The CloudEvent raised when a Task is updated.
message TaskUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.task.v1.updated";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "task";

  // The data associated with the event.
  TaskEventData data = 1;
}

// The CloudEvent raised when a Task is deleted.
message TaskDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.task.v1.deleted";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "task";

  // The data associated with the event.
  TaskEventData data = 1;
}

// The CloudEvent raised when an Environment is created.
message EnvironmentCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.environment.v1.created";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "environment";

  // The data associated with the event.
  EnvironmentEventData data = 1;
}

// The CloudEvent raised when an Environment is updated.
message EnvironmentUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.environment.v1.updated";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "environment";

  // The data associated with the event.
  EnvironmentEventData data = 1;
}

// The CloudEvent raised when an Environment is deleted.
message EnvironmentDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.dataplex.environment.v1.deleted";
  option (google.events.cloud_event_extension_name) = "lake";
  option (google.events.cloud_event_extension_name) = "environment";

  // The data associated with the event.
  EnvironmentEventData data = 1;
}

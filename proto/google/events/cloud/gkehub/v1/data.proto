// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.cloud.gkehub.v1;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Events.Protobuf.Cloud.GkeHub.V1";

// Feature represents the settings and status of any Hub Feature.
message Feature {
  // Output only. The full, unique name of this Feature resource in the format
  // `projects/*/locations/*/features/*`.
  string name = 1;

  // GCP labels for this Feature.
  map<string, string> labels = 2;

  // Output only. State of the Feature resource itself.
  FeatureResourceState resource_state = 3;

  // Output only. The Hub-wide Feature state.
  CommonFeatureState state = 6;

  // Output only. Membership-specific Feature status. If this Feature does
  // report any per-Membership status, this field may be unused.
  //
  // The keys indicate which Membership the state is for, in the form:
  //
  // `projects/{p}/locations/{l}/memberships/{m}`
  //
  // Where {p} is the project number, {l} is a valid location and {m} is a valid
  // Membership in this project at that location. {p} MUST match the Feature's
  // project number.
  map<string, MembershipFeatureState> membership_states = 7;

  // Output only. When the Feature resource was created.
  google.protobuf.Timestamp create_time = 8;

  // Output only. When the Feature resource was last updated.
  google.protobuf.Timestamp update_time = 9;

  // Output only. When the Feature resource was deleted.
  google.protobuf.Timestamp delete_time = 10;

  // Output only. Scope-specific Feature status. If this Feature does
  // report any per-Scope status, this field may be unused.
  //
  // The keys indicate which Scope the state is for, in the form:
  //
  // `projects/{p}/locations/global/scopes/{s}`
  //
  // Where {p} is the project, {s} is a valid Scope in this project.
  // {p} WILL match the Feature's project.
  map<string, ScopeFeatureState> scope_states = 13;
}

// FeatureResourceState describes the state of a Feature *resource* in the
// GkeHub API. See `FeatureState` for the "running state" of the Feature in the
// Hub and across Memberships.
message FeatureResourceState {
  // State describes the lifecycle status of a Feature.
  enum State {
    // State is unknown or not set.
    STATE_UNSPECIFIED = 0;

    // The Feature is being enabled, and the Feature resource is being created.
    // Once complete, the corresponding Feature will be enabled in this Hub.
    ENABLING = 1;

    // The Feature is enabled in this Hub, and the Feature resource is fully
    // available.
    ACTIVE = 2;

    // The Feature is being disabled in this Hub, and the Feature resource
    // is being deleted.
    DISABLING = 3;

    // The Feature resource is being updated.
    UPDATING = 4;

    // The Feature resource is being updated by the Hub Service.
    SERVICE_UPDATING = 5;
  }

  // The current state of the Feature resource in the Hub API.
  State state = 1;
}

// FeatureState describes the high-level state of a Feature. It may be used to
// describe a Feature's state at the environ-level, or per-membershop, depending
// on the context.
message FeatureState {
  // Code represents a machine-readable, high-level status of the Feature.
  enum Code {
    // Unknown or not set.
    CODE_UNSPECIFIED = 0;

    // The Feature is operating normally.
    OK = 1;

    // The Feature has encountered an issue, and is operating in a degraded
    // state. The Feature may need intervention to return to normal operation.
    // See the description and any associated Feature-specific details for more
    // information.
    WARNING = 2;

    // The Feature is not operating or is in a severely degraded state.
    // The Feature may need intervention to return to normal operation.
    // See the description and any associated Feature-specific details for more
    // information.
    ERROR = 3;
  }

  // The high-level, machine-readable status of this Feature.
  Code code = 1;

  // A human-readable description of the current status.
  string description = 2;

  // The time this status and any related Feature-specific details were updated.
  google.protobuf.Timestamp update_time = 3;
}

// CommonFeatureState contains Hub-wide Feature status information.
message CommonFeatureState {
  // Output only. The "running state" of the Feature in this Hub.
  FeatureState state = 1;
}

// ScopeFeatureState contains Scope-wide Feature status information.
message ScopeFeatureState {
  // Output only. The "running state" of the Feature in this Scope.
  FeatureState state = 1;
}

// MembershipFeatureState contains Feature status information for a single
// Membership.
message MembershipFeatureState {
  // The high-level state of this Feature for a single membership.
  FeatureState state = 1;
}

// Scope represents a Scope in a Fleet.
message Scope {
  // The resource name for the scope
  // `projects/{project}/locations/{location}/scopes/{scope}`
  string name = 1;

  // Output only. Google-generated UUID for this resource. This is unique across
  // all scope resources. If a scope resource is deleted and another resource
  // with the same name is created, it gets a different uid.
  string uid = 2;

  // Output only. When the scope was created.
  google.protobuf.Timestamp create_time = 3;

  // Output only. When the scope was last updated.
  google.protobuf.Timestamp update_time = 4;

  // Output only. When the scope was deleted.
  google.protobuf.Timestamp delete_time = 5;

  // Output only. State of the scope resource.
  ScopeLifecycleState state = 6;
}

// ScopeLifecycleState describes the state of a Scope resource.
message ScopeLifecycleState {
  // Code describes the state of a Scope resource.
  enum Code {
    // The code is not set.
    CODE_UNSPECIFIED = 0;

    // The scope is being created.
    CREATING = 1;

    // The scope active.
    READY = 2;

    // The scope is being deleted.
    DELETING = 3;

    // The scope is being updated.
    UPDATING = 4;
  }

  // Output only. The current state of the scope resource.
  Code code = 1;
}

// MembershipBinding is a subresource of a Membership, representing
// what Fleet Scopes (or other, future Fleet resources) a Membership is bound
// to.
message MembershipBinding {
  // What type of membershipbinding this is.
  oneof target {
    // A Workspace resource name in the format
    // `projects/*/locations/*/scopes/*`.
    string scope = 3;

    // Whether the membershipbinding is Fleet-wide; true means that this
    // Membership should be bound to all Namespaces in this entire Fleet.
    bool fleet = 4;
  }

  // The resource name for the membershipbinding itself
  // `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
  string name = 1;

  // Output only. Google-generated UUID for this resource. This is unique across
  // all membershipbinding resources. If a membershipbinding resource is deleted
  // and another resource with the same name is created, it gets a different
  // uid.
  string uid = 2;

  // Output only. When the membership binding was created.
  google.protobuf.Timestamp create_time = 5;

  // Output only. When the membership binding was last updated.
  google.protobuf.Timestamp update_time = 6;

  // Output only. When the membership binding was deleted.
  google.protobuf.Timestamp delete_time = 7;

  // Output only. State of the membership binding resource.
  MembershipBindingLifecycleState state = 8;
}

// MembershipBindingLifecycleState describes the state of a Binding resource.
message MembershipBindingLifecycleState {
  // Code describes the state of a MembershipBinding resource.
  enum Code {
    // The code is not set.
    CODE_UNSPECIFIED = 0;

    // The membershipbinding is being created.
    CREATING = 1;

    // The membershipbinding active.
    READY = 2;

    // The membershipbinding is being deleted.
    DELETING = 3;

    // The membershipbinding is being updated.
    UPDATING = 4;
  }

  // Output only. The current state of the MembershipBinding resource.
  Code code = 1;
}

// Membership contains information about a member cluster.
message Membership {
  // Type of resource represented by this Membership
  oneof type {
    // Optional. Endpoint information to reach this member.
    MembershipEndpoint endpoint = 4;
  }

  // Output only. The full, unique name of this Membership resource in the
  // format `projects/*/locations/*/memberships/{membership_id}`, set during
  // creation.
  //
  // `membership_id` must be a valid RFC 1123 compliant DNS label:
  //
  //   1. At most 63 characters in length
  //   2. It must consist of lower case alphanumeric characters or `-`
  //   3. It must start and end with an alphanumeric character
  //
  // Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
  // with a maximum length of 63 characters.
  string name = 1;

  // Optional. GCP labels for this membership.
  map<string, string> labels = 2;

  // Output only. Description of this membership, limited to 63 characters.
  // Must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.\ ]*`
  //
  // This field is present for legacy purposes.
  string description = 3;

  // Output only. State of the Membership resource.
  MembershipState state = 5;

  // Output only. When the Membership was created.
  google.protobuf.Timestamp create_time = 6;

  // Output only. When the Membership was last updated.
  google.protobuf.Timestamp update_time = 7;

  // Output only. When the Membership was deleted.
  google.protobuf.Timestamp delete_time = 8;

  // Optional. An externally-generated and managed ID for this Membership. This
  // ID may be modified after creation, but this is not recommended.
  //
  // The ID must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.]*`
  //
  // If this Membership represents a Kubernetes cluster, this value should be
  // set to the UID of the `kube-system` namespace object.
  string external_id = 9;

  // Output only. For clusters using Connect, the timestamp of the most recent
  // connection established with Google Cloud. This time is updated every
  // several minutes, not continuously. For clusters that do not use GKE
  // Connect, or that have never connected successfully, this field will be
  // unset.
  google.protobuf.Timestamp last_connection_time = 10;

  // Output only. Google-generated UUID for this resource. This is unique across
  // all Membership resources. If a Membership resource is deleted and another
  // resource with the same name is created, it gets a different unique_id.
  string unique_id = 11;

  // Optional. How to identify workloads from this Membership.
  // See the documentation on Workload Identity for more details:
  // https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
  Authority authority = 12;
}

// MembershipEndpoint contains information needed to contact a Kubernetes API,
// endpoint and any additional Kubernetes metadata.
message MembershipEndpoint {
  // Cluster information of the registered cluster.
  oneof type {
    // Optional. Specific information for a GKE-on-GCP cluster.
    GkeCluster gke_cluster = 1;

    // Optional. Specific information for a GKE On-Prem cluster. An onprem
    // user-cluster who has no resourceLink is not allowed to use this field, it
    // should have a nil "type" instead.
    OnPremCluster on_prem_cluster = 4;

    // Optional. Specific information for a GKE Multi-Cloud cluster.
    MultiCloudCluster multi_cloud_cluster = 5;

    // Optional. Specific information for a Google Edge cluster.
    EdgeCluster edge_cluster = 6;

    // Optional. Specific information for a GDC Edge Appliance cluster.
    ApplianceCluster appliance_cluster = 7;
  }

  // Output only. Useful Kubernetes-specific metadata.
  KubernetesMetadata kubernetes_metadata = 2;

  // Optional. The in-cluster Kubernetes Resources that should be applied for a
  // correctly registered cluster, in the steady state. These resources:
  //
  //   * Ensure that the cluster is exclusively registered to one and only one
  //     Hub Membership.
  //   * Propagate Workload Pool Information available in the Membership
  //     Authority field.
  //   * Ensure proper initial configuration of default Hub Features.
  KubernetesResource kubernetes_resource = 3;

  // Output only. Whether the lifecycle of this membership is managed by a
  // google cluster platform service.
  bool google_managed = 8;
}

// KubernetesResource contains the YAML manifests and configuration for
// Membership Kubernetes resources in the cluster. After CreateMembership or
// UpdateMembership, these resources should be re-applied in the cluster.
message KubernetesResource {
  // Output only. Additional Kubernetes resources that need to be applied to the
  // cluster after Membership creation, and after every update.
  //
  // This field is only populated in the Membership returned from a successful
  // long-running operation from CreateMembership or UpdateMembership. It is not
  // populated during normal GetMembership or ListMemberships requests. To get
  // the resource manifest after the initial registration, the caller should
  // make a UpdateMembership call with an empty field mask.
  repeated ResourceManifest membership_resources = 2;

  // Output only. The Kubernetes resources for installing the GKE Connect agent
  //
  // This field is only populated in the Membership returned from a successful
  // long-running operation from CreateMembership or UpdateMembership. It is not
  // populated during normal GetMembership or ListMemberships requests. To get
  // the resource manifest after the initial registration, the caller should
  // make a UpdateMembership call with an empty field mask.
  repeated ResourceManifest connect_resources = 3;

  // Optional. Options for Kubernetes resource generation.
  ResourceOptions resource_options = 4;
}

// ResourceOptions represent options for Kubernetes resource generation.
message ResourceOptions {
  // Optional. The Connect agent version to use for connect_resources. Defaults
  // to the latest GKE Connect version. The version must be a currently
  // supported version, obsolete versions will be rejected.
  string connect_version = 1;

  // Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for
  // CustomResourceDefinition resources.
  // This option should be set for clusters with Kubernetes apiserver versions
  // <1.16.
  bool v1beta1_crd = 2;

  // Optional. Major version of the Kubernetes cluster. This is only used to
  // determine which version to use for the CustomResourceDefinition resources,
  // `apiextensions/v1beta1` or`apiextensions/v1`.
  string k8s_version = 3;
}

// ResourceManifest represents a single Kubernetes resource to be applied to
// the cluster.
message ResourceManifest {
  // YAML manifest of the resource.
  string manifest = 1;

  // Whether the resource provided in the manifest is `cluster_scoped`.
  // If unset, the manifest is assumed to be namespace scoped.
  //
  // This field is used for REST mapping when applying the resource in a
  // cluster.
  bool cluster_scoped = 2;
}

// GkeCluster contains information specific to GKE clusters.
message GkeCluster {
  // Immutable. Self-link of the GCP resource for the GKE cluster. For example:
  //
  // //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
  //
  // Zonal clusters are also supported.
  string resource_link = 1;

  // Output only. If cluster_missing is set then it denotes that the GKE cluster
  // no longer exists in the GKE Control Plane.
  bool cluster_missing = 2;
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
message OnPremCluster {
  // ClusterType describes on prem cluster's type.
  enum ClusterType {
    // The ClusterType is not set.
    CLUSTERTYPE_UNSPECIFIED = 0;

    // The ClusterType is bootstrap cluster.
    BOOTSTRAP = 1;

    // The ClusterType is baremetal hybrid cluster.
    HYBRID = 2;

    // The ClusterType is baremetal standalone cluster.
    STANDALONE = 3;

    // The ClusterType is user cluster.
    USER = 4;
  }

  // Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For
  // example:
  //
  //  //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster
  //  //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
  string resource_link = 1;

  // Output only. If cluster_missing is set then it denotes that
  // API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no
  // longer exists.
  bool cluster_missing = 2;

  // Immutable. Whether the cluster is an admin cluster.
  bool admin_cluster = 3;

  // Immutable. The on prem cluster's type.
  ClusterType cluster_type = 4;
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
message MultiCloudCluster {
  // Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster.
  // For example:
  //
  //  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster
  //  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
  //  //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
  string resource_link = 1;

  // Output only. If cluster_missing is set then it denotes that
  // API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster
  // no longer exists.
  bool cluster_missing = 2;
}

// EdgeCluster contains information specific to Google Edge Clusters.
message EdgeCluster {
  // Immutable. Self-link of the GCP resource for the Edge Cluster. For
  // example:
  //
  // //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
  string resource_link = 1;
}

// ApplianceCluster contains information specific to GDC Edge Appliance
// Clusters.
message ApplianceCluster {
  // Immutable. Self-link of the GCP resource for the Appliance Cluster. For
  // example:
  //
  // //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
  string resource_link = 1;
}

// KubernetesMetadata provides informational metadata for Memberships
// representing Kubernetes clusters.
message KubernetesMetadata {
  // Output only. Kubernetes API server version string as reported by
  // `/version`.
  string kubernetes_api_server_version = 1;

  // Output only. Node providerID as reported by the first node in the list of
  // nodes on the Kubernetes endpoint. On Kubernetes platforms that support
  // zero-node clusters (like GKE-on-GCP), the node_count will be zero and the
  // node_provider_id will be empty.
  string node_provider_id = 2;

  // Output only. Node count as reported by Kubernetes nodes resources.
  int32 node_count = 3;

  // Output only. vCPU count as reported by Kubernetes nodes resources.
  int32 vcpu_count = 4;

  // Output only. The total memory capacity as reported by the sum of all
  // Kubernetes nodes resources, defined in MB.
  int32 memory_mb = 5;

  // Output only. The time at which these details were last updated. This
  // update_time is different from the Membership-level update_time since
  // EndpointDetails are updated internally for API consumers.
  google.protobuf.Timestamp update_time = 100;
}

// MembershipState describes the state of a Membership resource.
message MembershipState {
  // Code describes the state of a Membership resource.
  enum Code {
    // The code is not set.
    CODE_UNSPECIFIED = 0;

    // The cluster is being registered.
    CREATING = 1;

    // The cluster is registered.
    READY = 2;

    // The cluster is being unregistered.
    DELETING = 3;

    // The Membership is being updated.
    UPDATING = 4;

    // The Membership is being updated by the Hub Service.
    SERVICE_UPDATING = 5;
  }

  // Output only. The current state of the Membership resource.
  Code code = 1;
}

// Authority encodes how Google will recognize identities from this Membership.
// See the workload identity documentation for more details:
// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
message Authority {
  // Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with
  // `https://` and be a valid URL with length <2000 characters.
  //
  // If set, then Google will allow valid OIDC tokens from this issuer to
  // authenticate within the workload_identity_pool. OIDC discovery will be
  // performed on this URI to validate tokens from the issuer.
  //
  // Clearing `issuer` disables Workload Identity. `issuer` cannot be directly
  // modified; it must be cleared (and Workload Identity disabled) before using
  // a new issuer (and re-enabling Workload Identity).
  string issuer = 1;

  // Output only. The name of the workload identity pool in which `issuer` will
  // be recognized.
  //
  // There is a single Workload Identity Pool per Hub that is shared
  // between all Memberships that belong to that Hub. For a Hub hosted in
  // {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`,
  // although this is subject to change in newer versions of this API.
  string workload_identity_pool = 2;

  // Output only. An identity provider that reflects the `issuer` in the
  // workload identity pool.
  string identity_provider = 3;

  // Optional. OIDC verification keys for this Membership in JWKS format (RFC
  // 7517).
  //
  // When this field is set, OIDC discovery will NOT be performed on `issuer`,
  // and instead OIDC tokens will be validated using this field.
  bytes oidc_jwks = 4;
}

// The data within all Scope events.
message ScopeEventData {
  // Optional. The Scope event payload. Unset for deletion events.
  optional Scope payload = 1;
}

// The data within all Membership events.
message MembershipEventData {
  // Optional. The Membership event payload. Unset for deletion events.
  optional Membership payload = 1;
}

// The data within all Feature events.
message FeatureEventData {
  // Optional. The Feature event payload. Unset for deletion events.
  optional Feature payload = 1;
}

// The data within all MembershipBinding events.
message MembershipBindingEventData {
  // Optional. The MembershipBinding event payload. Unset for deletion events.
  optional MembershipBinding payload = 1;
}

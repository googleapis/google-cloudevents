// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.cloud.networkconnectivity.v1;

import "google/events/cloud/networkconnectivity/v1/data.proto";
import "google/events/cloudevent.proto";

option csharp_namespace = "Google.Events.Protobuf.Cloud.NetworkConnectivity.V1";
option php_namespace = "Google\\Events\\Cloud\\NetworkConnectivity\\V1";
option ruby_package = "Google::Events::Cloud::NetworkConnectivity::V1";
option (google.events.cloud_event_product) = "Network Connectivity";
option (google.events.cloud_event_extension_attribute) = {
  name: "serviceconnectionmap"
  description: "The resource ID of the ServiceConnectionMap triggering the event."
  camel_case_name: "serviceConnectionMap"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "serviceconnectionpolicy"
  description: "The resource ID of the ServiceConnectionPolicy triggering the event."
  camel_case_name: "serviceConnectionPolicy"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "serviceclass"
  description: "The resource ID of the ServiceClass triggering the event."
  camel_case_name: "serviceClass"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "serviceconnectiontoken"
  description: "The resource ID of the ServiceConnectionToken triggering the event."
  camel_case_name: "serviceConnectionToken"
};
option (google.events.cloud_event_extension_attribute) = {
  name: "hub"
  description: "The resource ID of the Hub triggering the event."
};
option (google.events.cloud_event_extension_attribute) = {
  name: "spoke"
  description: "The resource ID of the Spoke triggering the event."
};

// The CloudEvent raised when a ServiceConnectionMap is created.
message ServiceConnectionMapCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionMap.v1.created";
  option (google.events.cloud_event_extension_name) = "serviceconnectionmap";

  // The data associated with the event.
  ServiceConnectionMapEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionMap is updated.
message ServiceConnectionMapUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionMap.v1.updated";
  option (google.events.cloud_event_extension_name) = "serviceconnectionmap";

  // The data associated with the event.
  ServiceConnectionMapEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionMap is deleted.
message ServiceConnectionMapDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionMap.v1.deleted";
  option (google.events.cloud_event_extension_name) = "serviceconnectionmap";

  // The data associated with the event.
  ServiceConnectionMapEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionPolicy is created.
message ServiceConnectionPolicyCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionPolicy.v1.created";
  option (google.events.cloud_event_extension_name) = "serviceconnectionpolicy";

  // The data associated with the event.
  ServiceConnectionPolicyEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionPolicy is updated.
message ServiceConnectionPolicyUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionPolicy.v1.updated";
  option (google.events.cloud_event_extension_name) = "serviceconnectionpolicy";

  // The data associated with the event.
  ServiceConnectionPolicyEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionPolicy is deleted.
message ServiceConnectionPolicyDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionPolicy.v1.deleted";
  option (google.events.cloud_event_extension_name) = "serviceconnectionpolicy";

  // The data associated with the event.
  ServiceConnectionPolicyEventData data = 1;
}

// The CloudEvent raised when a ServiceClass is updated.
message ServiceClassUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceClass.v1.updated";
  option (google.events.cloud_event_extension_name) = "serviceclass";

  // The data associated with the event.
  ServiceClassEventData data = 1;
}

// The CloudEvent raised when a ServiceClass is deleted.
message ServiceClassDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceClass.v1.deleted";
  option (google.events.cloud_event_extension_name) = "serviceclass";

  // The data associated with the event.
  ServiceClassEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionToken is created.
message ServiceConnectionTokenCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionToken.v1.created";
  option (google.events.cloud_event_extension_name) = "serviceconnectiontoken";

  // The data associated with the event.
  ServiceConnectionTokenEventData data = 1;
}

// The CloudEvent raised when a ServiceConnectionToken is deleted.
message ServiceConnectionTokenDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.serviceConnectionToken.v1.deleted";
  option (google.events.cloud_event_extension_name) = "serviceconnectiontoken";

  // The data associated with the event.
  ServiceConnectionTokenEventData data = 1;
}

// The CloudEvent raised when a Hub is created.
message HubCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.hub.v1.created";
  option (google.events.cloud_event_extension_name) = "hub";

  // The data associated with the event.
  HubEventData data = 1;
}

// The CloudEvent raised when a Hub is updated.
message HubUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.hub.v1.updated";
  option (google.events.cloud_event_extension_name) = "hub";

  // The data associated with the event.
  HubEventData data = 1;
}

// The CloudEvent raised when a Hub is deleted.
message HubDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.hub.v1.deleted";
  option (google.events.cloud_event_extension_name) = "hub";

  // The data associated with the event.
  HubEventData data = 1;
}

// The CloudEvent raised when a Spoke is created.
message SpokeCreatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.spoke.v1.created";
  option (google.events.cloud_event_extension_name) = "spoke";

  // The data associated with the event.
  SpokeEventData data = 1;
}

// The CloudEvent raised when a Spoke is updated.
message SpokeUpdatedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.spoke.v1.updated";
  option (google.events.cloud_event_extension_name) = "spoke";

  // The data associated with the event.
  SpokeEventData data = 1;
}

// The CloudEvent raised when a Spoke is deleted.
message SpokeDeletedEvent {
  option (google.events.cloud_event_type) =
      "google.cloud.networkconnectivity.spoke.v1.deleted";
  option (google.events.cloud_event_extension_name) = "spoke";

  // The data associated with the event.
  SpokeEventData data = 1;
}

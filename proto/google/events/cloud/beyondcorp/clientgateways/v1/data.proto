// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.cloud.beyondcorp.clientgateways.v1;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Events.Protobuf.Cloud.BeyondCorp.ClientGateways.V1";
option php_namespace = "Google\\Events\\Cloud\\BeyondCorp\\ClientGateways\\V1";
option ruby_package = "Google::Events::Cloud::BeyondCorp::ClientGateways::V1";

// Message describing ClientGateway object.
message ClientGateway {
  // Represents the different states of a gateway.
  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;

    // Gateway is being created.
    CREATING = 1;

    // Gateway is being updated.
    UPDATING = 2;

    // Gateway is being deleted.
    DELETING = 3;

    // Gateway is running.
    RUNNING = 4;

    // Gateway is down and may be restored in the future.
    // This happens when CCFE sends ProjectState = OFF.
    DOWN = 5;

    // ClientGateway encountered an error and is in indeterministic state.
    ERROR = 6;
  }

  // Required. name of resource. The name is ignored during creation.
  string name = 1;

  // Output only. [Output only] Create time stamp.
  google.protobuf.Timestamp create_time = 2;

  // Output only. [Output only] Update time stamp.
  google.protobuf.Timestamp update_time = 3;

  // Output only. The operational state of the gateway.
  State state = 4;

  // Output only. A unique identifier for the instance generated by the system.
  string id = 5;

  // Output only. The client connector service name that the client gateway is
  // associated to. Client Connector Services, named as follows:
  //   `projects/{project_id}/locations/{location_id}/client_connector_services/{client_connector_service_id}`.
  string client_connector_service = 6;
}

// The data within all ClientGateway events.
message ClientGatewayEventData {
  // Optional. The ClientGateway event payload. Unset for deletion events.
  optional ClientGateway payload = 1;
}

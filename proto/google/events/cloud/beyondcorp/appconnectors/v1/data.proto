// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.events.cloud.beyondcorp.appconnectors.v1;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Events.Protobuf.Cloud.Beyondcorp.Appconnectors.V1";

// ResourceInfo represents the information/status of an app connector resource.
// Such as:
// - remote_agent
//   - container
//     - runtime
//     - appgateway
//       - appconnector
//         - appconnection
//           - tunnel
//       - logagent
message ResourceInfo {
  // Required. Unique Id for the resource.
  string id = 1;

  // Overall health status. Overall status is derived based on the status of
  // each sub level resources.
  HealthStatus status = 2;

  // The timestamp to collect the info. It is suggested to be set by
  // the topmost level resource only.
  google.protobuf.Timestamp time = 4;

  // List of Info for the sub level resources.
  repeated ResourceInfo sub = 5;
}

// HealthStatus represents the health status.
enum HealthStatus {
  // Health status is unknown: not initialized or failed to retrieve.
  HEALTH_STATUS_UNSPECIFIED = 0;

  // The resource is healthy.
  HEALTHY = 1;

  // The resource is unhealthy.
  UNHEALTHY = 2;

  // The resource is unresponsive.
  UNRESPONSIVE = 3;

  // Some sub-resources are UNHEALTHY.
  DEGRADED = 4;
}

// A BeyondCorp connector resource that represents an application facing
// component deployed proximal to and with direct access to the application
// instances. It is used to establish connectivity between the remote enterprise
// environment and GCP. It initiates connections to the applications and can
// proxy the data from users over the connection.
message AppConnector {
  // PrincipalInfo represents an Identity oneof.
  message PrincipalInfo {
    // ServiceAccount represents a GCP service account.
    message ServiceAccount {
      // Email address of the service account.
      string email = 1;
    }

    oneof type {
      // A GCP service account.
      ServiceAccount service_account = 1;
    }
  }

  // Represents the different states of a AppConnector.
  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;

    // AppConnector is being created.
    CREATING = 1;

    // AppConnector has been created.
    CREATED = 2;

    // AppConnector's configuration is being updated.
    UPDATING = 3;

    // AppConnector is being deleted.
    DELETING = 4;

    // AppConnector is down and may be restored in the future.
    // This happens when CCFE sends ProjectState = OFF.
    DOWN = 5;
  }

  // Required. Unique resource name of the AppConnector.
  // The name is ignored when creating a AppConnector.
  string name = 1;

  // Output only. Timestamp when the resource was created.
  google.protobuf.Timestamp create_time = 2;

  // Output only. Timestamp when the resource was last modified.
  google.protobuf.Timestamp update_time = 3;

  // Optional. Resource labels to represent user provided metadata.
  map<string, string> labels = 4;

  // Optional. An arbitrary user-provided name for the AppConnector. Cannot
  // exceed 64 characters.
  string display_name = 5;

  // Output only. A unique identifier for the instance generated by the
  // system.
  string uid = 6;

  // Output only. The current state of the AppConnector.
  State state = 7;

  // Required. Principal information about the Identity of the AppConnector.
  PrincipalInfo principal_info = 8;

  // Optional. Resource info of the connector.
  ResourceInfo resource_info = 11;
}

// The data within all AppConnector events.
message AppConnectorEventData {
  // Optional. The AppConnector event payload. Unset for deletion events.
  optional AppConnector payload = 1;
}
